/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 30.0, "minX": 0.0, "maxY": 3736.0, "series": [{"data": [[0.0, 177.0], [0.1, 178.0], [0.2, 198.0], [0.3, 198.0], [0.4, 271.0], [0.5, 303.0], [0.6, 326.0], [0.7, 329.0], [0.8, 330.0], [0.9, 345.0], [1.0, 353.0], [1.1, 364.0], [1.2, 365.0], [1.3, 376.0], [1.4, 376.0], [1.5, 383.0], [1.6, 393.0], [1.7, 444.0], [1.8, 447.0], [1.9, 449.0], [2.0, 458.0], [2.1, 470.0], [2.2, 484.0], [2.3, 579.0], [2.4, 605.0], [2.5, 641.0], [2.6, 658.0], [2.7, 688.0], [2.8, 701.0], [2.9, 702.0], [3.0, 721.0], [3.1, 732.0], [3.2, 735.0], [3.3, 741.0], [3.4, 772.0], [3.5, 788.0], [3.6, 800.0], [3.7, 811.0], [3.8, 820.0], [3.9, 824.0], [4.0, 825.0], [4.1, 827.0], [4.2, 829.0], [4.3, 831.0], [4.4, 832.0], [4.5, 832.0], [4.6, 836.0], [4.7, 845.0], [4.8, 846.0], [4.9, 846.0], [5.0, 851.0], [5.1, 853.0], [5.2, 855.0], [5.3, 858.0], [5.4, 863.0], [5.5, 870.0], [5.6, 870.0], [5.7, 872.0], [5.8, 874.0], [5.9, 874.0], [6.0, 875.0], [6.1, 878.0], [6.2, 879.0], [6.3, 879.0], [6.4, 880.0], [6.5, 885.0], [6.6, 885.0], [6.7, 888.0], [6.8, 895.0], [6.9, 895.0], [7.0, 899.0], [7.1, 904.0], [7.2, 905.0], [7.3, 906.0], [7.4, 906.0], [7.5, 908.0], [7.6, 909.0], [7.7, 911.0], [7.8, 912.0], [7.9, 919.0], [8.0, 921.0], [8.1, 922.0], [8.2, 924.0], [8.3, 924.0], [8.4, 925.0], [8.5, 926.0], [8.6, 926.0], [8.7, 928.0], [8.8, 930.0], [8.9, 930.0], [9.0, 930.0], [9.1, 931.0], [9.2, 931.0], [9.3, 932.0], [9.4, 934.0], [9.5, 935.0], [9.6, 935.0], [9.7, 937.0], [9.8, 941.0], [9.9, 942.0], [10.0, 943.0], [10.1, 943.0], [10.2, 945.0], [10.3, 945.0], [10.4, 946.0], [10.5, 946.0], [10.6, 948.0], [10.7, 948.0], [10.8, 948.0], [10.9, 950.0], [11.0, 956.0], [11.1, 958.0], [11.2, 959.0], [11.3, 959.0], [11.4, 960.0], [11.5, 960.0], [11.6, 961.0], [11.7, 961.0], [11.8, 961.0], [11.9, 963.0], [12.0, 963.0], [12.1, 965.0], [12.2, 965.0], [12.3, 967.0], [12.4, 967.0], [12.5, 968.0], [12.6, 969.0], [12.7, 969.0], [12.8, 969.0], [12.9, 972.0], [13.0, 973.0], [13.1, 974.0], [13.2, 978.0], [13.3, 979.0], [13.4, 980.0], [13.5, 980.0], [13.6, 981.0], [13.7, 984.0], [13.8, 984.0], [13.9, 986.0], [14.0, 988.0], [14.1, 989.0], [14.2, 989.0], [14.3, 989.0], [14.4, 994.0], [14.5, 995.0], [14.6, 996.0], [14.7, 996.0], [14.8, 997.0], [14.9, 999.0], [15.0, 1000.0], [15.1, 1000.0], [15.2, 1002.0], [15.3, 1002.0], [15.4, 1003.0], [15.5, 1003.0], [15.6, 1003.0], [15.7, 1004.0], [15.8, 1004.0], [15.9, 1004.0], [16.0, 1006.0], [16.1, 1007.0], [16.2, 1008.0], [16.3, 1010.0], [16.4, 1012.0], [16.5, 1012.0], [16.6, 1013.0], [16.7, 1014.0], [16.8, 1016.0], [16.9, 1017.0], [17.0, 1017.0], [17.1, 1018.0], [17.2, 1023.0], [17.3, 1025.0], [17.4, 1025.0], [17.5, 1025.0], [17.6, 1026.0], [17.7, 1027.0], [17.8, 1028.0], [17.9, 1029.0], [18.0, 1031.0], [18.1, 1031.0], [18.2, 1033.0], [18.3, 1033.0], [18.4, 1034.0], [18.5, 1035.0], [18.6, 1035.0], [18.7, 1035.0], [18.8, 1035.0], [18.9, 1035.0], [19.0, 1036.0], [19.1, 1037.0], [19.2, 1037.0], [19.3, 1038.0], [19.4, 1041.0], [19.5, 1041.0], [19.6, 1043.0], [19.7, 1044.0], [19.8, 1044.0], [19.9, 1044.0], [20.0, 1044.0], [20.1, 1045.0], [20.2, 1048.0], [20.3, 1048.0], [20.4, 1048.0], [20.5, 1051.0], [20.6, 1052.0], [20.7, 1052.0], [20.8, 1055.0], [20.9, 1055.0], [21.0, 1056.0], [21.1, 1056.0], [21.2, 1056.0], [21.3, 1059.0], [21.4, 1059.0], [21.5, 1059.0], [21.6, 1061.0], [21.7, 1061.0], [21.8, 1063.0], [21.9, 1064.0], [22.0, 1067.0], [22.1, 1069.0], [22.2, 1069.0], [22.3, 1069.0], [22.4, 1070.0], [22.5, 1071.0], [22.6, 1079.0], [22.7, 1080.0], [22.8, 1080.0], [22.9, 1080.0], [23.0, 1080.0], [23.1, 1081.0], [23.2, 1083.0], [23.3, 1084.0], [23.4, 1085.0], [23.5, 1085.0], [23.6, 1086.0], [23.7, 1086.0], [23.8, 1086.0], [23.9, 1088.0], [24.0, 1088.0], [24.1, 1088.0], [24.2, 1089.0], [24.3, 1089.0], [24.4, 1091.0], [24.5, 1091.0], [24.6, 1091.0], [24.7, 1091.0], [24.8, 1092.0], [24.9, 1092.0], [25.0, 1093.0], [25.1, 1093.0], [25.2, 1095.0], [25.3, 1095.0], [25.4, 1095.0], [25.5, 1095.0], [25.6, 1095.0], [25.7, 1098.0], [25.8, 1098.0], [25.9, 1099.0], [26.0, 1099.0], [26.1, 1100.0], [26.2, 1100.0], [26.3, 1102.0], [26.4, 1102.0], [26.5, 1102.0], [26.6, 1105.0], [26.7, 1106.0], [26.8, 1106.0], [26.9, 1106.0], [27.0, 1107.0], [27.1, 1108.0], [27.2, 1109.0], [27.3, 1109.0], [27.4, 1110.0], [27.5, 1110.0], [27.6, 1111.0], [27.7, 1112.0], [27.8, 1113.0], [27.9, 1114.0], [28.0, 1114.0], [28.1, 1114.0], [28.2, 1115.0], [28.3, 1116.0], [28.4, 1118.0], [28.5, 1119.0], [28.6, 1119.0], [28.7, 1119.0], [28.8, 1119.0], [28.9, 1121.0], [29.0, 1123.0], [29.1, 1123.0], [29.2, 1123.0], [29.3, 1123.0], [29.4, 1125.0], [29.5, 1125.0], [29.6, 1126.0], [29.7, 1129.0], [29.8, 1129.0], [29.9, 1131.0], [30.0, 1132.0], [30.1, 1132.0], [30.2, 1133.0], [30.3, 1133.0], [30.4, 1135.0], [30.5, 1135.0], [30.6, 1136.0], [30.7, 1136.0], [30.8, 1137.0], [30.9, 1138.0], [31.0, 1141.0], [31.1, 1141.0], [31.2, 1142.0], [31.3, 1143.0], [31.4, 1143.0], [31.5, 1145.0], [31.6, 1145.0], [31.7, 1145.0], [31.8, 1146.0], [31.9, 1146.0], [32.0, 1147.0], [32.1, 1148.0], [32.2, 1148.0], [32.3, 1149.0], [32.4, 1150.0], [32.5, 1150.0], [32.6, 1150.0], [32.7, 1151.0], [32.8, 1153.0], [32.9, 1154.0], [33.0, 1156.0], [33.1, 1156.0], [33.2, 1157.0], [33.3, 1157.0], [33.4, 1158.0], [33.5, 1158.0], [33.6, 1160.0], [33.7, 1160.0], [33.8, 1160.0], [33.9, 1160.0], [34.0, 1162.0], [34.1, 1162.0], [34.2, 1163.0], [34.3, 1163.0], [34.4, 1164.0], [34.5, 1164.0], [34.6, 1165.0], [34.7, 1167.0], [34.8, 1167.0], [34.9, 1168.0], [35.0, 1168.0], [35.1, 1169.0], [35.2, 1170.0], [35.3, 1172.0], [35.4, 1173.0], [35.5, 1173.0], [35.6, 1174.0], [35.7, 1176.0], [35.8, 1176.0], [35.9, 1177.0], [36.0, 1178.0], [36.1, 1178.0], [36.2, 1179.0], [36.3, 1181.0], [36.4, 1182.0], [36.5, 1182.0], [36.6, 1183.0], [36.7, 1184.0], [36.8, 1185.0], [36.9, 1185.0], [37.0, 1185.0], [37.1, 1185.0], [37.2, 1186.0], [37.3, 1186.0], [37.4, 1186.0], [37.5, 1186.0], [37.6, 1186.0], [37.7, 1187.0], [37.8, 1188.0], [37.9, 1189.0], [38.0, 1190.0], [38.1, 1190.0], [38.2, 1191.0], [38.3, 1192.0], [38.4, 1192.0], [38.5, 1192.0], [38.6, 1193.0], [38.7, 1193.0], [38.8, 1194.0], [38.9, 1195.0], [39.0, 1195.0], [39.1, 1196.0], [39.2, 1196.0], [39.3, 1197.0], [39.4, 1197.0], [39.5, 1197.0], [39.6, 1197.0], [39.7, 1199.0], [39.8, 1199.0], [39.9, 1201.0], [40.0, 1201.0], [40.1, 1201.0], [40.2, 1201.0], [40.3, 1202.0], [40.4, 1203.0], [40.5, 1205.0], [40.6, 1205.0], [40.7, 1205.0], [40.8, 1206.0], [40.9, 1207.0], [41.0, 1208.0], [41.1, 1209.0], [41.2, 1209.0], [41.3, 1211.0], [41.4, 1211.0], [41.5, 1211.0], [41.6, 1212.0], [41.7, 1214.0], [41.8, 1214.0], [41.9, 1215.0], [42.0, 1215.0], [42.1, 1215.0], [42.2, 1217.0], [42.3, 1217.0], [42.4, 1217.0], [42.5, 1218.0], [42.6, 1218.0], [42.7, 1218.0], [42.8, 1220.0], [42.9, 1220.0], [43.0, 1220.0], [43.1, 1220.0], [43.2, 1220.0], [43.3, 1220.0], [43.4, 1221.0], [43.5, 1222.0], [43.6, 1222.0], [43.7, 1222.0], [43.8, 1222.0], [43.9, 1225.0], [44.0, 1226.0], [44.1, 1226.0], [44.2, 1226.0], [44.3, 1226.0], [44.4, 1227.0], [44.5, 1227.0], [44.6, 1227.0], [44.7, 1228.0], [44.8, 1229.0], [44.9, 1229.0], [45.0, 1230.0], [45.1, 1230.0], [45.2, 1231.0], [45.3, 1232.0], [45.4, 1233.0], [45.5, 1233.0], [45.6, 1234.0], [45.7, 1234.0], [45.8, 1234.0], [45.9, 1235.0], [46.0, 1236.0], [46.1, 1236.0], [46.2, 1236.0], [46.3, 1238.0], [46.4, 1238.0], [46.5, 1239.0], [46.6, 1240.0], [46.7, 1240.0], [46.8, 1241.0], [46.9, 1242.0], [47.0, 1243.0], [47.1, 1243.0], [47.2, 1244.0], [47.3, 1244.0], [47.4, 1245.0], [47.5, 1245.0], [47.6, 1245.0], [47.7, 1246.0], [47.8, 1246.0], [47.9, 1247.0], [48.0, 1248.0], [48.1, 1248.0], [48.2, 1249.0], [48.3, 1249.0], [48.4, 1250.0], [48.5, 1251.0], [48.6, 1251.0], [48.7, 1253.0], [48.8, 1254.0], [48.9, 1256.0], [49.0, 1256.0], [49.1, 1256.0], [49.2, 1258.0], [49.3, 1258.0], [49.4, 1258.0], [49.5, 1258.0], [49.6, 1259.0], [49.7, 1261.0], [49.8, 1261.0], [49.9, 1261.0], [50.0, 1261.0], [50.1, 1262.0], [50.2, 1263.0], [50.3, 1264.0], [50.4, 1267.0], [50.5, 1267.0], [50.6, 1268.0], [50.7, 1268.0], [50.8, 1269.0], [50.9, 1269.0], [51.0, 1271.0], [51.1, 1271.0], [51.2, 1273.0], [51.3, 1276.0], [51.4, 1277.0], [51.5, 1277.0], [51.6, 1278.0], [51.7, 1279.0], [51.8, 1279.0], [51.9, 1281.0], [52.0, 1281.0], [52.1, 1283.0], [52.2, 1283.0], [52.3, 1283.0], [52.4, 1285.0], [52.5, 1285.0], [52.6, 1287.0], [52.7, 1288.0], [52.8, 1288.0], [52.9, 1289.0], [53.0, 1289.0], [53.1, 1290.0], [53.2, 1290.0], [53.3, 1290.0], [53.4, 1291.0], [53.5, 1291.0], [53.6, 1292.0], [53.7, 1293.0], [53.8, 1293.0], [53.9, 1293.0], [54.0, 1297.0], [54.1, 1298.0], [54.2, 1298.0], [54.3, 1299.0], [54.4, 1301.0], [54.5, 1301.0], [54.6, 1301.0], [54.7, 1303.0], [54.8, 1304.0], [54.9, 1305.0], [55.0, 1305.0], [55.1, 1305.0], [55.2, 1305.0], [55.3, 1306.0], [55.4, 1306.0], [55.5, 1307.0], [55.6, 1308.0], [55.7, 1309.0], [55.8, 1309.0], [55.9, 1310.0], [56.0, 1311.0], [56.1, 1311.0], [56.2, 1311.0], [56.3, 1312.0], [56.4, 1312.0], [56.5, 1312.0], [56.6, 1313.0], [56.7, 1314.0], [56.8, 1315.0], [56.9, 1315.0], [57.0, 1315.0], [57.1, 1316.0], [57.2, 1317.0], [57.3, 1317.0], [57.4, 1318.0], [57.5, 1319.0], [57.6, 1319.0], [57.7, 1320.0], [57.8, 1321.0], [57.9, 1321.0], [58.0, 1322.0], [58.1, 1322.0], [58.2, 1323.0], [58.3, 1323.0], [58.4, 1325.0], [58.5, 1325.0], [58.6, 1326.0], [58.7, 1326.0], [58.8, 1326.0], [58.9, 1327.0], [59.0, 1328.0], [59.1, 1329.0], [59.2, 1329.0], [59.3, 1329.0], [59.4, 1330.0], [59.5, 1331.0], [59.6, 1332.0], [59.7, 1332.0], [59.8, 1332.0], [59.9, 1332.0], [60.0, 1333.0], [60.1, 1334.0], [60.2, 1337.0], [60.3, 1339.0], [60.4, 1340.0], [60.5, 1340.0], [60.6, 1340.0], [60.7, 1341.0], [60.8, 1341.0], [60.9, 1342.0], [61.0, 1343.0], [61.1, 1344.0], [61.2, 1344.0], [61.3, 1345.0], [61.4, 1346.0], [61.5, 1346.0], [61.6, 1346.0], [61.7, 1346.0], [61.8, 1348.0], [61.9, 1348.0], [62.0, 1349.0], [62.1, 1350.0], [62.2, 1351.0], [62.3, 1353.0], [62.4, 1353.0], [62.5, 1353.0], [62.6, 1354.0], [62.7, 1354.0], [62.8, 1355.0], [62.9, 1355.0], [63.0, 1355.0], [63.1, 1357.0], [63.2, 1359.0], [63.3, 1360.0], [63.4, 1360.0], [63.5, 1360.0], [63.6, 1361.0], [63.7, 1362.0], [63.8, 1364.0], [63.9, 1365.0], [64.0, 1365.0], [64.1, 1368.0], [64.2, 1368.0], [64.3, 1369.0], [64.4, 1369.0], [64.5, 1369.0], [64.6, 1370.0], [64.7, 1370.0], [64.8, 1373.0], [64.9, 1373.0], [65.0, 1373.0], [65.1, 1374.0], [65.2, 1375.0], [65.3, 1376.0], [65.4, 1377.0], [65.5, 1377.0], [65.6, 1379.0], [65.7, 1380.0], [65.8, 1380.0], [65.9, 1381.0], [66.0, 1381.0], [66.1, 1381.0], [66.2, 1382.0], [66.3, 1383.0], [66.4, 1383.0], [66.5, 1385.0], [66.6, 1388.0], [66.7, 1388.0], [66.8, 1389.0], [66.9, 1390.0], [67.0, 1390.0], [67.1, 1391.0], [67.2, 1391.0], [67.3, 1397.0], [67.4, 1398.0], [67.5, 1398.0], [67.6, 1401.0], [67.7, 1401.0], [67.8, 1402.0], [67.9, 1403.0], [68.0, 1404.0], [68.1, 1404.0], [68.2, 1406.0], [68.3, 1406.0], [68.4, 1409.0], [68.5, 1410.0], [68.6, 1411.0], [68.7, 1413.0], [68.8, 1414.0], [68.9, 1414.0], [69.0, 1414.0], [69.1, 1414.0], [69.2, 1416.0], [69.3, 1417.0], [69.4, 1418.0], [69.5, 1418.0], [69.6, 1418.0], [69.7, 1420.0], [69.8, 1420.0], [69.9, 1421.0], [70.0, 1423.0], [70.1, 1423.0], [70.2, 1426.0], [70.3, 1426.0], [70.4, 1427.0], [70.5, 1428.0], [70.6, 1428.0], [70.7, 1429.0], [70.8, 1431.0], [70.9, 1432.0], [71.0, 1432.0], [71.1, 1432.0], [71.2, 1435.0], [71.3, 1435.0], [71.4, 1436.0], [71.5, 1436.0], [71.6, 1437.0], [71.7, 1438.0], [71.8, 1440.0], [71.9, 1441.0], [72.0, 1446.0], [72.1, 1446.0], [72.2, 1447.0], [72.3, 1448.0], [72.4, 1450.0], [72.5, 1452.0], [72.6, 1453.0], [72.7, 1453.0], [72.8, 1453.0], [72.9, 1453.0], [73.0, 1454.0], [73.1, 1455.0], [73.2, 1456.0], [73.3, 1457.0], [73.4, 1461.0], [73.5, 1462.0], [73.6, 1463.0], [73.7, 1466.0], [73.8, 1466.0], [73.9, 1469.0], [74.0, 1469.0], [74.1, 1470.0], [74.2, 1473.0], [74.3, 1474.0], [74.4, 1475.0], [74.5, 1475.0], [74.6, 1476.0], [74.7, 1477.0], [74.8, 1477.0], [74.9, 1479.0], [75.0, 1479.0], [75.1, 1481.0], [75.2, 1482.0], [75.3, 1482.0], [75.4, 1484.0], [75.5, 1485.0], [75.6, 1485.0], [75.7, 1487.0], [75.8, 1487.0], [75.9, 1491.0], [76.0, 1492.0], [76.1, 1497.0], [76.2, 1499.0], [76.3, 1499.0], [76.4, 1501.0], [76.5, 1503.0], [76.6, 1504.0], [76.7, 1504.0], [76.8, 1508.0], [76.9, 1509.0], [77.0, 1509.0], [77.1, 1510.0], [77.2, 1510.0], [77.3, 1513.0], [77.4, 1513.0], [77.5, 1513.0], [77.6, 1516.0], [77.7, 1516.0], [77.8, 1518.0], [77.9, 1519.0], [78.0, 1519.0], [78.1, 1521.0], [78.2, 1521.0], [78.3, 1521.0], [78.4, 1521.0], [78.5, 1522.0], [78.6, 1523.0], [78.7, 1525.0], [78.8, 1525.0], [78.9, 1529.0], [79.0, 1529.0], [79.1, 1529.0], [79.2, 1535.0], [79.3, 1539.0], [79.4, 1547.0], [79.5, 1548.0], [79.6, 1548.0], [79.7, 1549.0], [79.8, 1549.0], [79.9, 1550.0], [80.0, 1554.0], [80.1, 1554.0], [80.2, 1555.0], [80.3, 1556.0], [80.4, 1557.0], [80.5, 1559.0], [80.6, 1559.0], [80.7, 1560.0], [80.8, 1563.0], [80.9, 1565.0], [81.0, 1565.0], [81.1, 1565.0], [81.2, 1565.0], [81.3, 1567.0], [81.4, 1567.0], [81.5, 1569.0], [81.6, 1572.0], [81.7, 1573.0], [81.8, 1575.0], [81.9, 1578.0], [82.0, 1578.0], [82.1, 1579.0], [82.2, 1582.0], [82.3, 1583.0], [82.4, 1584.0], [82.5, 1586.0], [82.6, 1588.0], [82.7, 1589.0], [82.8, 1596.0], [82.9, 1598.0], [83.0, 1599.0], [83.1, 1602.0], [83.2, 1603.0], [83.3, 1604.0], [83.4, 1604.0], [83.5, 1606.0], [83.6, 1610.0], [83.7, 1613.0], [83.8, 1614.0], [83.9, 1614.0], [84.0, 1616.0], [84.1, 1619.0], [84.2, 1622.0], [84.3, 1622.0], [84.4, 1623.0], [84.5, 1624.0], [84.6, 1624.0], [84.7, 1626.0], [84.8, 1627.0], [84.9, 1629.0], [85.0, 1634.0], [85.1, 1635.0], [85.2, 1638.0], [85.3, 1639.0], [85.4, 1639.0], [85.5, 1642.0], [85.6, 1650.0], [85.7, 1651.0], [85.8, 1651.0], [85.9, 1653.0], [86.0, 1654.0], [86.1, 1660.0], [86.2, 1660.0], [86.3, 1661.0], [86.4, 1665.0], [86.5, 1666.0], [86.6, 1666.0], [86.7, 1668.0], [86.8, 1668.0], [86.9, 1671.0], [87.0, 1673.0], [87.1, 1674.0], [87.2, 1675.0], [87.3, 1675.0], [87.4, 1676.0], [87.5, 1676.0], [87.6, 1685.0], [87.7, 1690.0], [87.8, 1691.0], [87.9, 1694.0], [88.0, 1698.0], [88.1, 1699.0], [88.2, 1701.0], [88.3, 1701.0], [88.4, 1702.0], [88.5, 1706.0], [88.6, 1708.0], [88.7, 1717.0], [88.8, 1722.0], [88.9, 1730.0], [89.0, 1730.0], [89.1, 1731.0], [89.2, 1735.0], [89.3, 1737.0], [89.4, 1739.0], [89.5, 1744.0], [89.6, 1749.0], [89.7, 1750.0], [89.8, 1750.0], [89.9, 1754.0], [90.0, 1754.0], [90.1, 1756.0], [90.2, 1757.0], [90.3, 1762.0], [90.4, 1764.0], [90.5, 1765.0], [90.6, 1765.0], [90.7, 1771.0], [90.8, 1772.0], [90.9, 1779.0], [91.0, 1779.0], [91.1, 1786.0], [91.2, 1787.0], [91.3, 1794.0], [91.4, 1796.0], [91.5, 1799.0], [91.6, 1800.0], [91.7, 1801.0], [91.8, 1803.0], [91.9, 1806.0], [92.0, 1811.0], [92.1, 1811.0], [92.2, 1830.0], [92.3, 1832.0], [92.4, 1836.0], [92.5, 1839.0], [92.6, 1846.0], [92.7, 1848.0], [92.8, 1860.0], [92.9, 1861.0], [93.0, 1872.0], [93.1, 1872.0], [93.2, 1874.0], [93.3, 1875.0], [93.4, 1888.0], [93.5, 1888.0], [93.6, 1893.0], [93.7, 1907.0], [93.8, 1917.0], [93.9, 1919.0], [94.0, 1936.0], [94.1, 1949.0], [94.2, 1951.0], [94.3, 1956.0], [94.4, 1957.0], [94.5, 1958.0], [94.6, 1969.0], [94.7, 1981.0], [94.8, 1984.0], [94.9, 1986.0], [95.0, 1991.0], [95.1, 1993.0], [95.2, 1997.0], [95.3, 2000.0], [95.4, 2003.0], [95.5, 2029.0], [95.6, 2029.0], [95.7, 2034.0], [95.8, 2060.0], [95.9, 2075.0], [96.0, 2087.0], [96.1, 2171.0], [96.2, 2178.0], [96.3, 2194.0], [96.4, 2241.0], [96.5, 2242.0], [96.6, 2268.0], [96.7, 2289.0], [96.8, 2296.0], [96.9, 2302.0], [97.0, 2325.0], [97.1, 2347.0], [97.2, 2393.0], [97.3, 2399.0], [97.4, 2403.0], [97.5, 2406.0], [97.6, 2411.0], [97.7, 2418.0], [97.8, 2446.0], [97.9, 2454.0], [98.0, 2479.0], [98.1, 2505.0], [98.2, 2507.0], [98.3, 2566.0], [98.4, 2594.0], [98.5, 2634.0], [98.6, 2640.0], [98.7, 2696.0], [98.8, 2781.0], [98.9, 2830.0], [99.0, 2842.0], [99.1, 2878.0], [99.2, 3001.0], [99.3, 3169.0], [99.4, 3178.0], [99.5, 3203.0], [99.6, 3234.0], [99.7, 3405.0], [99.8, 3501.0], [99.9, 3736.0]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[0.0, 2008.0], [0.1, 2008.0], [0.2, 2008.0], [0.3, 2008.0], [0.4, 2008.0], [0.5, 2008.0], [0.6, 2008.0], [0.7, 2008.0], [0.8, 2008.0], [0.9, 2008.0], [1.0, 2008.0], [1.1, 2008.0], [1.2, 2008.0], [1.3, 2008.0], [1.4, 2008.0], [1.5, 2008.0], [1.6, 2008.0], [1.7, 2008.0], [1.8, 2008.0], [1.9, 2008.0], [2.0, 2008.0], [2.1, 2008.0], [2.2, 2008.0], [2.3, 2008.0], [2.4, 2008.0], [2.5, 2008.0], [2.6, 2008.0], [2.7, 2008.0], [2.8, 2008.0], [2.9, 2008.0], [3.0, 2008.0], [3.1, 2008.0], [3.2, 2008.0], [3.3, 2008.0], [3.4, 2008.0], [3.5, 2008.0], [3.6, 2008.0], [3.7, 2008.0], [3.8, 2008.0], [3.9, 2008.0], [4.0, 2008.0], [4.1, 2008.0], [4.2, 2008.0], [4.3, 2008.0], [4.4, 2008.0], [4.5, 2008.0], [4.6, 2008.0], [4.7, 2008.0], [4.8, 2008.0], [4.9, 2008.0], [5.0, 2008.0], [5.1, 2008.0], [5.2, 2008.0], [5.3, 2008.0], [5.4, 2008.0], [5.5, 2008.0], [5.6, 2008.0], [5.7, 2008.0], [5.8, 2008.0], [5.9, 2008.0], [6.0, 2008.0], [6.1, 2008.0], [6.2, 2008.0], [6.3, 2008.0], [6.4, 2008.0], [6.5, 2008.0], [6.6, 2008.0], [6.7, 2008.0], [6.8, 2008.0], [6.9, 2008.0], [7.0, 2008.0], [7.1, 2008.0], [7.2, 2008.0], [7.3, 2008.0], [7.4, 2008.0], [7.5, 2008.0], [7.6, 2008.0], [7.7, 2008.0], [7.8, 2008.0], [7.9, 2008.0], [8.0, 2008.0], [8.1, 2008.0], [8.2, 2008.0], [8.3, 2008.0], [8.4, 2008.0], [8.5, 2008.0], [8.6, 2008.0], [8.7, 2008.0], [8.8, 2008.0], [8.9, 2008.0], [9.0, 2008.0], [9.1, 2008.0], [9.2, 2008.0], [9.3, 2008.0], [9.4, 2008.0], [9.5, 2008.0], [9.6, 2008.0], [9.7, 2008.0], [9.8, 2008.0], [9.9, 2008.0], [10.0, 2008.0], [10.1, 2008.0], [10.2, 2008.0], [10.3, 2008.0], [10.4, 2008.0], [10.5, 2008.0], [10.6, 2008.0], [10.7, 2008.0], [10.8, 2008.0], [10.9, 2008.0], [11.0, 2008.0], [11.1, 2008.0], [11.2, 2008.0], [11.3, 2008.0], [11.4, 2008.0], [11.5, 2008.0], [11.6, 2008.0], [11.7, 2008.0], [11.8, 2008.0], [11.9, 2008.0], [12.0, 2008.0], [12.1, 2008.0], [12.2, 2008.0], [12.3, 2008.0], [12.4, 2008.0], [12.5, 2008.0], [12.6, 2008.0], [12.7, 2008.0], [12.8, 2008.0], [12.9, 2008.0], [13.0, 2008.0], [13.1, 2008.0], [13.2, 2008.0], [13.3, 2008.0], [13.4, 2008.0], [13.5, 2008.0], [13.6, 2008.0], [13.7, 2008.0], [13.8, 2008.0], [13.9, 2008.0], [14.0, 2008.0], [14.1, 2008.0], [14.2, 2008.0], [14.3, 2008.0], [14.4, 2008.0], [14.5, 2008.0], [14.6, 2008.0], [14.7, 2008.0], [14.8, 2008.0], [14.9, 2008.0], [15.0, 2008.0], [15.1, 2008.0], [15.2, 2008.0], [15.3, 2008.0], [15.4, 2008.0], [15.5, 2008.0], [15.6, 2008.0], [15.7, 2008.0], [15.8, 2008.0], [15.9, 2008.0], [16.0, 2008.0], [16.1, 2008.0], [16.2, 2008.0], [16.3, 2008.0], [16.4, 2008.0], [16.5, 2008.0], [16.6, 2008.0], [16.7, 2008.0], [16.8, 2008.0], [16.9, 2008.0], [17.0, 2008.0], [17.1, 2008.0], [17.2, 2008.0], [17.3, 2008.0], [17.4, 2008.0], [17.5, 2008.0], [17.6, 2008.0], [17.7, 2008.0], [17.8, 2008.0], [17.9, 2008.0], [18.0, 2008.0], [18.1, 2008.0], [18.2, 2008.0], [18.3, 2008.0], [18.4, 2008.0], [18.5, 2008.0], [18.6, 2008.0], [18.7, 2008.0], [18.8, 2008.0], [18.9, 2008.0], [19.0, 2008.0], [19.1, 2008.0], [19.2, 2008.0], [19.3, 2008.0], [19.4, 2008.0], [19.5, 2008.0], [19.6, 2008.0], [19.7, 2008.0], [19.8, 2008.0], [19.9, 2008.0], [20.0, 2008.0], [20.1, 2008.0], [20.2, 2008.0], [20.3, 2008.0], [20.4, 2008.0], [20.5, 2008.0], [20.6, 2008.0], [20.7, 2008.0], [20.8, 2008.0], [20.9, 2008.0], [21.0, 2008.0], [21.1, 2008.0], [21.2, 2008.0], [21.3, 2008.0], [21.4, 2008.0], [21.5, 2008.0], [21.6, 2008.0], [21.7, 2008.0], [21.8, 2008.0], [21.9, 2008.0], [22.0, 2008.0], [22.1, 2008.0], [22.2, 2008.0], [22.3, 2008.0], [22.4, 2008.0], [22.5, 2008.0], [22.6, 2008.0], [22.7, 2008.0], [22.8, 2008.0], [22.9, 2008.0], [23.0, 2008.0], [23.1, 2008.0], [23.2, 2008.0], [23.3, 2008.0], [23.4, 2008.0], [23.5, 2008.0], [23.6, 2008.0], [23.7, 2008.0], [23.8, 2008.0], [23.9, 2008.0], [24.0, 2008.0], [24.1, 2008.0], [24.2, 2008.0], [24.3, 2008.0], [24.4, 2008.0], [24.5, 2008.0], [24.6, 2008.0], [24.7, 2008.0], [24.8, 2008.0], [24.9, 2008.0], [25.0, 2008.0], [25.1, 2008.0], [25.2, 2008.0], [25.3, 2008.0], [25.4, 2008.0], [25.5, 2008.0], [25.6, 2008.0], [25.7, 2008.0], [25.8, 2008.0], [25.9, 2008.0], [26.0, 2008.0], [26.1, 2008.0], [26.2, 2008.0], [26.3, 2008.0], [26.4, 2008.0], [26.5, 2008.0], [26.6, 2008.0], [26.7, 2008.0], [26.8, 2008.0], [26.9, 2008.0], [27.0, 2008.0], [27.1, 2008.0], [27.2, 2008.0], [27.3, 2008.0], [27.4, 2008.0], [27.5, 2008.0], [27.6, 2008.0], [27.7, 2008.0], [27.8, 2008.0], [27.9, 2008.0], [28.0, 2008.0], [28.1, 2008.0], [28.2, 2008.0], [28.3, 2008.0], [28.4, 2008.0], [28.5, 2008.0], [28.6, 2008.0], [28.7, 2008.0], [28.8, 2008.0], [28.9, 2008.0], [29.0, 2008.0], [29.1, 2008.0], [29.2, 2008.0], [29.3, 2008.0], [29.4, 2008.0], [29.5, 2008.0], [29.6, 2008.0], [29.7, 2008.0], [29.8, 2008.0], [29.9, 2008.0], [30.0, 2008.0], [30.1, 2008.0], [30.2, 2008.0], [30.3, 2008.0], [30.4, 2008.0], [30.5, 2008.0], [30.6, 2008.0], [30.7, 2008.0], [30.8, 2008.0], [30.9, 2008.0], [31.0, 2008.0], [31.1, 2008.0], [31.2, 2008.0], [31.3, 2008.0], [31.4, 2008.0], [31.5, 2008.0], [31.6, 2008.0], [31.7, 2008.0], [31.8, 2008.0], [31.9, 2008.0], [32.0, 2008.0], [32.1, 2008.0], [32.2, 2008.0], [32.3, 2008.0], [32.4, 2008.0], [32.5, 2008.0], [32.6, 2008.0], [32.7, 2008.0], [32.8, 2008.0], [32.9, 2008.0], [33.0, 2008.0], [33.1, 2008.0], [33.2, 2008.0], [33.3, 2008.0], [33.4, 2008.0], [33.5, 2008.0], [33.6, 2008.0], [33.7, 2008.0], [33.8, 2008.0], [33.9, 2008.0], [34.0, 2008.0], [34.1, 2008.0], [34.2, 2008.0], [34.3, 2008.0], [34.4, 2008.0], [34.5, 2008.0], [34.6, 2008.0], [34.7, 2008.0], [34.8, 2008.0], [34.9, 2008.0], [35.0, 2008.0], [35.1, 2008.0], [35.2, 2008.0], [35.3, 2008.0], [35.4, 2008.0], [35.5, 2008.0], [35.6, 2008.0], [35.7, 2008.0], [35.8, 2008.0], [35.9, 2008.0], [36.0, 2008.0], [36.1, 2008.0], [36.2, 2008.0], [36.3, 2008.0], [36.4, 2008.0], [36.5, 2008.0], [36.6, 2008.0], [36.7, 2008.0], [36.8, 2008.0], [36.9, 2008.0], [37.0, 2008.0], [37.1, 2008.0], [37.2, 2008.0], [37.3, 2008.0], [37.4, 2008.0], [37.5, 2008.0], [37.6, 2008.0], [37.7, 2008.0], [37.8, 2008.0], [37.9, 2008.0], [38.0, 2008.0], [38.1, 2008.0], [38.2, 2008.0], [38.3, 2008.0], [38.4, 2008.0], [38.5, 2008.0], [38.6, 2008.0], [38.7, 2008.0], [38.8, 2008.0], [38.9, 2008.0], [39.0, 2008.0], [39.1, 2008.0], [39.2, 2008.0], [39.3, 2008.0], [39.4, 2008.0], [39.5, 2008.0], [39.6, 2008.0], [39.7, 2008.0], [39.8, 2008.0], [39.9, 2008.0], [40.0, 2008.0], [40.1, 2008.0], [40.2, 2008.0], [40.3, 2008.0], [40.4, 2008.0], [40.5, 2008.0], [40.6, 2008.0], [40.7, 2008.0], [40.8, 2008.0], [40.9, 2008.0], [41.0, 2008.0], [41.1, 2008.0], [41.2, 2008.0], [41.3, 2008.0], [41.4, 2008.0], [41.5, 2008.0], [41.6, 2008.0], [41.7, 2008.0], [41.8, 2008.0], [41.9, 2008.0], [42.0, 2008.0], [42.1, 2008.0], [42.2, 2008.0], [42.3, 2008.0], [42.4, 2008.0], [42.5, 2008.0], [42.6, 2008.0], [42.7, 2008.0], [42.8, 2008.0], [42.9, 2008.0], [43.0, 2008.0], [43.1, 2008.0], [43.2, 2008.0], [43.3, 2008.0], [43.4, 2008.0], [43.5, 2008.0], [43.6, 2008.0], [43.7, 2008.0], [43.8, 2008.0], [43.9, 2008.0], [44.0, 2008.0], [44.1, 2008.0], [44.2, 2008.0], [44.3, 2008.0], [44.4, 2008.0], [44.5, 2008.0], [44.6, 2008.0], [44.7, 2008.0], [44.8, 2008.0], [44.9, 2008.0], [45.0, 2008.0], [45.1, 2008.0], [45.2, 2008.0], [45.3, 2008.0], [45.4, 2008.0], [45.5, 2008.0], [45.6, 2008.0], [45.7, 2008.0], [45.8, 2008.0], [45.9, 2008.0], [46.0, 2008.0], [46.1, 2008.0], [46.2, 2008.0], [46.3, 2008.0], [46.4, 2008.0], [46.5, 2008.0], [46.6, 2008.0], [46.7, 2008.0], [46.8, 2008.0], [46.9, 2008.0], [47.0, 2008.0], [47.1, 2008.0], [47.2, 2008.0], [47.3, 2008.0], [47.4, 2008.0], [47.5, 2008.0], [47.6, 2008.0], [47.7, 2008.0], [47.8, 2008.0], [47.9, 2008.0], [48.0, 2008.0], [48.1, 2008.0], [48.2, 2008.0], [48.3, 2008.0], [48.4, 2008.0], [48.5, 2008.0], [48.6, 2008.0], [48.7, 2008.0], [48.8, 2008.0], [48.9, 2008.0], [49.0, 2008.0], [49.1, 2008.0], [49.2, 2008.0], [49.3, 2008.0], [49.4, 2008.0], [49.5, 2008.0], [49.6, 2008.0], [49.7, 2008.0], [49.8, 2008.0], [49.9, 2008.0], [50.0, 2008.0], [50.1, 2008.0], [50.2, 2008.0], [50.3, 2008.0], [50.4, 2008.0], [50.5, 2008.0], [50.6, 2008.0], [50.7, 2008.0], [50.8, 2008.0], [50.9, 2008.0], [51.0, 2008.0], [51.1, 2008.0], [51.2, 2008.0], [51.3, 2008.0], [51.4, 2008.0], [51.5, 2008.0], [51.6, 2008.0], [51.7, 2008.0], [51.8, 2008.0], [51.9, 2008.0], [52.0, 2008.0], [52.1, 2008.0], [52.2, 2008.0], [52.3, 2008.0], [52.4, 2008.0], [52.5, 2008.0], [52.6, 2008.0], [52.7, 2008.0], [52.8, 2008.0], [52.9, 2008.0], [53.0, 2008.0], [53.1, 2008.0], [53.2, 2008.0], [53.3, 2008.0], [53.4, 2008.0], [53.5, 2008.0], [53.6, 2008.0], [53.7, 2008.0], [53.8, 2008.0], [53.9, 2008.0], [54.0, 2008.0], [54.1, 2008.0], [54.2, 2008.0], [54.3, 2008.0], [54.4, 2008.0], [54.5, 2008.0], [54.6, 2008.0], [54.7, 2008.0], [54.8, 2008.0], [54.9, 2008.0], [55.0, 2008.0], [55.1, 2008.0], [55.2, 2008.0], [55.3, 2008.0], [55.4, 2008.0], [55.5, 2008.0], [55.6, 2008.0], [55.7, 2008.0], [55.8, 2008.0], [55.9, 2008.0], [56.0, 2008.0], [56.1, 2008.0], [56.2, 2008.0], [56.3, 2008.0], [56.4, 2008.0], [56.5, 2008.0], [56.6, 2008.0], [56.7, 2008.0], [56.8, 2008.0], [56.9, 2008.0], [57.0, 2008.0], [57.1, 2008.0], [57.2, 2008.0], [57.3, 2008.0], [57.4, 2008.0], [57.5, 2008.0], [57.6, 2008.0], [57.7, 2008.0], [57.8, 2008.0], [57.9, 2008.0], [58.0, 2008.0], [58.1, 2008.0], [58.2, 2008.0], [58.3, 2008.0], [58.4, 2008.0], [58.5, 2008.0], [58.6, 2008.0], [58.7, 2008.0], [58.8, 2008.0], [58.9, 2008.0], [59.0, 2008.0], [59.1, 2008.0], [59.2, 2008.0], [59.3, 2008.0], [59.4, 2008.0], [59.5, 2008.0], [59.6, 2008.0], [59.7, 2008.0], [59.8, 2008.0], [59.9, 2008.0], [60.0, 2008.0], [60.1, 2008.0], [60.2, 2008.0], [60.3, 2008.0], [60.4, 2008.0], [60.5, 2008.0], [60.6, 2008.0], [60.7, 2008.0], [60.8, 2008.0], [60.9, 2008.0], [61.0, 2008.0], [61.1, 2008.0], [61.2, 2008.0], [61.3, 2008.0], [61.4, 2008.0], [61.5, 2008.0], [61.6, 2008.0], [61.7, 2008.0], [61.8, 2008.0], [61.9, 2008.0], [62.0, 2008.0], [62.1, 2008.0], [62.2, 2008.0], [62.3, 2008.0], [62.4, 2008.0], [62.5, 2008.0], [62.6, 2008.0], [62.7, 2008.0], [62.8, 2008.0], [62.9, 2008.0], [63.0, 2008.0], [63.1, 2008.0], [63.2, 2008.0], [63.3, 2008.0], [63.4, 2008.0], [63.5, 2008.0], [63.6, 2008.0], [63.7, 2008.0], [63.8, 2008.0], [63.9, 2008.0], [64.0, 2008.0], [64.1, 2008.0], [64.2, 2008.0], [64.3, 2008.0], [64.4, 2008.0], [64.5, 2008.0], [64.6, 2008.0], [64.7, 2008.0], [64.8, 2008.0], [64.9, 2008.0], [65.0, 2008.0], [65.1, 2008.0], [65.2, 2008.0], [65.3, 2008.0], [65.4, 2008.0], [65.5, 2008.0], [65.6, 2008.0], [65.7, 2008.0], [65.8, 2008.0], [65.9, 2008.0], [66.0, 2008.0], [66.1, 2008.0], [66.2, 2008.0], [66.3, 2008.0], [66.4, 2008.0], [66.5, 2008.0], [66.6, 2008.0], [66.7, 2008.0], [66.8, 2008.0], [66.9, 2008.0], [67.0, 2008.0], [67.1, 2008.0], [67.2, 2008.0], [67.3, 2008.0], [67.4, 2008.0], [67.5, 2008.0], [67.6, 2008.0], [67.7, 2008.0], [67.8, 2008.0], [67.9, 2008.0], [68.0, 2008.0], [68.1, 2008.0], [68.2, 2008.0], [68.3, 2008.0], [68.4, 2008.0], [68.5, 2008.0], [68.6, 2008.0], [68.7, 2008.0], [68.8, 2008.0], [68.9, 2008.0], [69.0, 2008.0], [69.1, 2008.0], [69.2, 2008.0], [69.3, 2008.0], [69.4, 2008.0], [69.5, 2008.0], [69.6, 2008.0], [69.7, 2008.0], [69.8, 2008.0], [69.9, 2008.0], [70.0, 2008.0], [70.1, 2008.0], [70.2, 2008.0], [70.3, 2008.0], [70.4, 2008.0], [70.5, 2008.0], [70.6, 2008.0], [70.7, 2008.0], [70.8, 2008.0], [70.9, 2008.0], [71.0, 2008.0], [71.1, 2008.0], [71.2, 2008.0], [71.3, 2008.0], [71.4, 2008.0], [71.5, 2008.0], [71.6, 2008.0], [71.7, 2008.0], [71.8, 2008.0], [71.9, 2008.0], [72.0, 2008.0], [72.1, 2008.0], [72.2, 2008.0], [72.3, 2008.0], [72.4, 2008.0], [72.5, 2008.0], [72.6, 2008.0], [72.7, 2008.0], [72.8, 2008.0], [72.9, 2008.0], [73.0, 2008.0], [73.1, 2008.0], [73.2, 2008.0], [73.3, 2008.0], [73.4, 2008.0], [73.5, 2008.0], [73.6, 2008.0], [73.7, 2008.0], [73.8, 2008.0], [73.9, 2008.0], [74.0, 2008.0], [74.1, 2008.0], [74.2, 2008.0], [74.3, 2008.0], [74.4, 2008.0], [74.5, 2008.0], [74.6, 2008.0], [74.7, 2008.0], [74.8, 2008.0], [74.9, 2008.0], [75.0, 2008.0], [75.1, 2008.0], [75.2, 2008.0], [75.3, 2008.0], [75.4, 2008.0], [75.5, 2008.0], [75.6, 2008.0], [75.7, 2008.0], [75.8, 2008.0], [75.9, 2008.0], [76.0, 2008.0], [76.1, 2008.0], [76.2, 2008.0], [76.3, 2008.0], [76.4, 2008.0], [76.5, 2008.0], [76.6, 2008.0], [76.7, 2008.0], [76.8, 2008.0], [76.9, 2008.0], [77.0, 2008.0], [77.1, 2008.0], [77.2, 2008.0], [77.3, 2008.0], [77.4, 2008.0], [77.5, 2008.0], [77.6, 2008.0], [77.7, 2008.0], [77.8, 2008.0], [77.9, 2008.0], [78.0, 2008.0], [78.1, 2008.0], [78.2, 2008.0], [78.3, 2008.0], [78.4, 2008.0], [78.5, 2008.0], [78.6, 2008.0], [78.7, 2008.0], [78.8, 2008.0], [78.9, 2008.0], [79.0, 2008.0], [79.1, 2008.0], [79.2, 2008.0], [79.3, 2008.0], [79.4, 2008.0], [79.5, 2008.0], [79.6, 2008.0], [79.7, 2008.0], [79.8, 2008.0], [79.9, 2008.0], [80.0, 2008.0], [80.1, 2008.0], [80.2, 2008.0], [80.3, 2008.0], [80.4, 2008.0], [80.5, 2008.0], [80.6, 2008.0], [80.7, 2008.0], [80.8, 2008.0], [80.9, 2008.0], [81.0, 2008.0], [81.1, 2008.0], [81.2, 2008.0], [81.3, 2008.0], [81.4, 2008.0], [81.5, 2008.0], [81.6, 2008.0], [81.7, 2008.0], [81.8, 2008.0], [81.9, 2008.0], [82.0, 2008.0], [82.1, 2008.0], [82.2, 2008.0], [82.3, 2008.0], [82.4, 2008.0], [82.5, 2008.0], [82.6, 2008.0], [82.7, 2008.0], [82.8, 2008.0], [82.9, 2008.0], [83.0, 2008.0], [83.1, 2008.0], [83.2, 2008.0], [83.3, 2008.0], [83.4, 2008.0], [83.5, 2008.0], [83.6, 2008.0], [83.7, 2008.0], [83.8, 2008.0], [83.9, 2008.0], [84.0, 2008.0], [84.1, 2008.0], [84.2, 2008.0], [84.3, 2008.0], [84.4, 2008.0], [84.5, 2008.0], [84.6, 2008.0], [84.7, 2008.0], [84.8, 2008.0], [84.9, 2008.0], [85.0, 2008.0], [85.1, 2008.0], [85.2, 2008.0], [85.3, 2008.0], [85.4, 2008.0], [85.5, 2008.0], [85.6, 2008.0], [85.7, 2008.0], [85.8, 2008.0], [85.9, 2008.0], [86.0, 2008.0], [86.1, 2008.0], [86.2, 2008.0], [86.3, 2008.0], [86.4, 2008.0], [86.5, 2008.0], [86.6, 2008.0], [86.7, 2008.0], [86.8, 2008.0], [86.9, 2008.0], [87.0, 2008.0], [87.1, 2008.0], [87.2, 2008.0], [87.3, 2008.0], [87.4, 2008.0], [87.5, 2008.0], [87.6, 2008.0], [87.7, 2008.0], [87.8, 2008.0], [87.9, 2008.0], [88.0, 2008.0], [88.1, 2008.0], [88.2, 2008.0], [88.3, 2008.0], [88.4, 2008.0], [88.5, 2008.0], [88.6, 2008.0], [88.7, 2008.0], [88.8, 2008.0], [88.9, 2008.0], [89.0, 2008.0], [89.1, 2008.0], [89.2, 2008.0], [89.3, 2008.0], [89.4, 2008.0], [89.5, 2008.0], [89.6, 2008.0], [89.7, 2008.0], [89.8, 2008.0], [89.9, 2008.0], [90.0, 2008.0], [90.1, 2008.0], [90.2, 2008.0], [90.3, 2008.0], [90.4, 2008.0], [90.5, 2008.0], [90.6, 2008.0], [90.7, 2008.0], [90.8, 2008.0], [90.9, 2008.0], [91.0, 2008.0], [91.1, 2008.0], [91.2, 2008.0], [91.3, 2008.0], [91.4, 2008.0], [91.5, 2008.0], [91.6, 2008.0], [91.7, 2008.0], [91.8, 2008.0], [91.9, 2008.0], [92.0, 2008.0], [92.1, 2008.0], [92.2, 2008.0], [92.3, 2008.0], [92.4, 2008.0], [92.5, 2008.0], [92.6, 2008.0], [92.7, 2008.0], [92.8, 2008.0], [92.9, 2008.0], [93.0, 2008.0], [93.1, 2008.0], [93.2, 2008.0], [93.3, 2008.0], [93.4, 2008.0], [93.5, 2008.0], [93.6, 2008.0], [93.7, 2008.0], [93.8, 2008.0], [93.9, 2008.0], [94.0, 2008.0], [94.1, 2008.0], [94.2, 2008.0], [94.3, 2008.0], [94.4, 2008.0], [94.5, 2008.0], [94.6, 2008.0], [94.7, 2008.0], [94.8, 2008.0], [94.9, 2008.0], [95.0, 2008.0], [95.1, 2008.0], [95.2, 2008.0], [95.3, 2008.0], [95.4, 2008.0], [95.5, 2008.0], [95.6, 2008.0], [95.7, 2008.0], [95.8, 2008.0], [95.9, 2008.0], [96.0, 2008.0], [96.1, 2008.0], [96.2, 2008.0], [96.3, 2008.0], [96.4, 2008.0], [96.5, 2008.0], [96.6, 2008.0], [96.7, 2008.0], [96.8, 2008.0], [96.9, 2008.0], [97.0, 2008.0], [97.1, 2008.0], [97.2, 2008.0], [97.3, 2008.0], [97.4, 2008.0], [97.5, 2008.0], [97.6, 2008.0], [97.7, 2008.0], [97.8, 2008.0], [97.9, 2008.0], [98.0, 2008.0], [98.1, 2008.0], [98.2, 2008.0], [98.3, 2008.0], [98.4, 2008.0], [98.5, 2008.0], [98.6, 2008.0], [98.7, 2008.0], [98.8, 2008.0], [98.9, 2008.0], [99.0, 2008.0], [99.1, 2008.0], [99.2, 2008.0], [99.3, 2008.0], [99.4, 2008.0], [99.5, 2008.0], [99.6, 2008.0], [99.7, 2008.0], [99.8, 2008.0], [99.9, 2008.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[0.0, 334.0], [0.1, 334.0], [0.2, 334.0], [0.3, 334.0], [0.4, 334.0], [0.5, 334.0], [0.6, 334.0], [0.7, 334.0], [0.8, 334.0], [0.9, 334.0], [1.0, 334.0], [1.1, 334.0], [1.2, 334.0], [1.3, 334.0], [1.4, 334.0], [1.5, 334.0], [1.6, 334.0], [1.7, 334.0], [1.8, 334.0], [1.9, 334.0], [2.0, 334.0], [2.1, 334.0], [2.2, 334.0], [2.3, 334.0], [2.4, 334.0], [2.5, 334.0], [2.6, 334.0], [2.7, 334.0], [2.8, 334.0], [2.9, 334.0], [3.0, 334.0], [3.1, 334.0], [3.2, 334.0], [3.3, 334.0], [3.4, 334.0], [3.5, 334.0], [3.6, 334.0], [3.7, 334.0], [3.8, 334.0], [3.9, 334.0], [4.0, 334.0], [4.1, 334.0], [4.2, 334.0], [4.3, 334.0], [4.4, 334.0], [4.5, 334.0], [4.6, 334.0], [4.7, 334.0], [4.8, 334.0], [4.9, 334.0], [5.0, 334.0], [5.1, 334.0], [5.2, 334.0], [5.3, 334.0], [5.4, 334.0], [5.5, 334.0], [5.6, 334.0], [5.7, 334.0], [5.8, 334.0], [5.9, 334.0], [6.0, 334.0], [6.1, 334.0], [6.2, 334.0], [6.3, 334.0], [6.4, 334.0], [6.5, 334.0], [6.6, 334.0], [6.7, 334.0], [6.8, 334.0], [6.9, 334.0], [7.0, 334.0], [7.1, 334.0], [7.2, 334.0], [7.3, 334.0], [7.4, 334.0], [7.5, 334.0], [7.6, 334.0], [7.7, 334.0], [7.8, 334.0], [7.9, 334.0], [8.0, 334.0], [8.1, 334.0], [8.2, 334.0], [8.3, 334.0], [8.4, 334.0], [8.5, 334.0], [8.6, 334.0], [8.7, 334.0], [8.8, 334.0], [8.9, 334.0], [9.0, 334.0], [9.1, 334.0], [9.2, 334.0], [9.3, 334.0], [9.4, 334.0], [9.5, 334.0], [9.6, 334.0], [9.7, 334.0], [9.8, 334.0], [9.9, 334.0], [10.0, 334.0], [10.1, 334.0], [10.2, 334.0], [10.3, 334.0], [10.4, 334.0], [10.5, 334.0], [10.6, 334.0], [10.7, 334.0], [10.8, 334.0], [10.9, 334.0], [11.0, 334.0], [11.1, 334.0], [11.2, 334.0], [11.3, 334.0], [11.4, 334.0], [11.5, 334.0], [11.6, 334.0], [11.7, 334.0], [11.8, 334.0], [11.9, 334.0], [12.0, 334.0], [12.1, 334.0], [12.2, 334.0], [12.3, 334.0], [12.4, 334.0], [12.5, 334.0], [12.6, 334.0], [12.7, 334.0], [12.8, 334.0], [12.9, 334.0], [13.0, 334.0], [13.1, 334.0], [13.2, 334.0], [13.3, 334.0], [13.4, 334.0], [13.5, 334.0], [13.6, 334.0], [13.7, 334.0], [13.8, 334.0], [13.9, 334.0], [14.0, 334.0], [14.1, 334.0], [14.2, 334.0], [14.3, 334.0], [14.4, 334.0], [14.5, 334.0], [14.6, 334.0], [14.7, 334.0], [14.8, 334.0], [14.9, 334.0], [15.0, 334.0], [15.1, 334.0], [15.2, 334.0], [15.3, 334.0], [15.4, 334.0], [15.5, 334.0], [15.6, 334.0], [15.7, 334.0], [15.8, 334.0], [15.9, 334.0], [16.0, 334.0], [16.1, 334.0], [16.2, 334.0], [16.3, 334.0], [16.4, 334.0], [16.5, 334.0], [16.6, 334.0], [16.7, 334.0], [16.8, 334.0], [16.9, 334.0], [17.0, 334.0], [17.1, 334.0], [17.2, 334.0], [17.3, 334.0], [17.4, 334.0], [17.5, 334.0], [17.6, 334.0], [17.7, 334.0], [17.8, 334.0], [17.9, 334.0], [18.0, 334.0], [18.1, 334.0], [18.2, 334.0], [18.3, 334.0], [18.4, 334.0], [18.5, 334.0], [18.6, 334.0], [18.7, 334.0], [18.8, 334.0], [18.9, 334.0], [19.0, 334.0], [19.1, 334.0], [19.2, 334.0], [19.3, 334.0], [19.4, 334.0], [19.5, 334.0], [19.6, 334.0], [19.7, 334.0], [19.8, 334.0], [19.9, 334.0], [20.0, 334.0], [20.1, 334.0], [20.2, 334.0], [20.3, 334.0], [20.4, 334.0], [20.5, 334.0], [20.6, 334.0], [20.7, 334.0], [20.8, 334.0], [20.9, 334.0], [21.0, 334.0], [21.1, 334.0], [21.2, 334.0], [21.3, 334.0], [21.4, 334.0], [21.5, 334.0], [21.6, 334.0], [21.7, 334.0], [21.8, 334.0], [21.9, 334.0], [22.0, 334.0], [22.1, 334.0], [22.2, 334.0], [22.3, 334.0], [22.4, 334.0], [22.5, 334.0], [22.6, 334.0], [22.7, 334.0], [22.8, 334.0], [22.9, 334.0], [23.0, 334.0], [23.1, 334.0], [23.2, 334.0], [23.3, 334.0], [23.4, 334.0], [23.5, 334.0], [23.6, 334.0], [23.7, 334.0], [23.8, 334.0], [23.9, 334.0], [24.0, 334.0], [24.1, 334.0], [24.2, 334.0], [24.3, 334.0], [24.4, 334.0], [24.5, 334.0], [24.6, 334.0], [24.7, 334.0], [24.8, 334.0], [24.9, 334.0], [25.0, 334.0], [25.1, 334.0], [25.2, 334.0], [25.3, 334.0], [25.4, 334.0], [25.5, 334.0], [25.6, 334.0], [25.7, 334.0], [25.8, 334.0], [25.9, 334.0], [26.0, 334.0], [26.1, 334.0], [26.2, 334.0], [26.3, 334.0], [26.4, 334.0], [26.5, 334.0], [26.6, 334.0], [26.7, 334.0], [26.8, 334.0], [26.9, 334.0], [27.0, 334.0], [27.1, 334.0], [27.2, 334.0], [27.3, 334.0], [27.4, 334.0], [27.5, 334.0], [27.6, 334.0], [27.7, 334.0], [27.8, 334.0], [27.9, 334.0], [28.0, 334.0], [28.1, 334.0], [28.2, 334.0], [28.3, 334.0], [28.4, 334.0], [28.5, 334.0], [28.6, 334.0], [28.7, 334.0], [28.8, 334.0], [28.9, 334.0], [29.0, 334.0], [29.1, 334.0], [29.2, 334.0], [29.3, 334.0], [29.4, 334.0], [29.5, 334.0], [29.6, 334.0], [29.7, 334.0], [29.8, 334.0], [29.9, 334.0], [30.0, 334.0], [30.1, 334.0], [30.2, 334.0], [30.3, 334.0], [30.4, 334.0], [30.5, 334.0], [30.6, 334.0], [30.7, 334.0], [30.8, 334.0], [30.9, 334.0], [31.0, 334.0], [31.1, 334.0], [31.2, 334.0], [31.3, 334.0], [31.4, 334.0], [31.5, 334.0], [31.6, 334.0], [31.7, 334.0], [31.8, 334.0], [31.9, 334.0], [32.0, 334.0], [32.1, 334.0], [32.2, 334.0], [32.3, 334.0], [32.4, 334.0], [32.5, 334.0], [32.6, 334.0], [32.7, 334.0], [32.8, 334.0], [32.9, 334.0], [33.0, 334.0], [33.1, 334.0], [33.2, 334.0], [33.3, 334.0], [33.4, 334.0], [33.5, 334.0], [33.6, 334.0], [33.7, 334.0], [33.8, 334.0], [33.9, 334.0], [34.0, 334.0], [34.1, 334.0], [34.2, 334.0], [34.3, 334.0], [34.4, 334.0], [34.5, 334.0], [34.6, 334.0], [34.7, 334.0], [34.8, 334.0], [34.9, 334.0], [35.0, 334.0], [35.1, 334.0], [35.2, 334.0], [35.3, 334.0], [35.4, 334.0], [35.5, 334.0], [35.6, 334.0], [35.7, 334.0], [35.8, 334.0], [35.9, 334.0], [36.0, 334.0], [36.1, 334.0], [36.2, 334.0], [36.3, 334.0], [36.4, 334.0], [36.5, 334.0], [36.6, 334.0], [36.7, 334.0], [36.8, 334.0], [36.9, 334.0], [37.0, 334.0], [37.1, 334.0], [37.2, 334.0], [37.3, 334.0], [37.4, 334.0], [37.5, 334.0], [37.6, 334.0], [37.7, 334.0], [37.8, 334.0], [37.9, 334.0], [38.0, 334.0], [38.1, 334.0], [38.2, 334.0], [38.3, 334.0], [38.4, 334.0], [38.5, 334.0], [38.6, 334.0], [38.7, 334.0], [38.8, 334.0], [38.9, 334.0], [39.0, 334.0], [39.1, 334.0], [39.2, 334.0], [39.3, 334.0], [39.4, 334.0], [39.5, 334.0], [39.6, 334.0], [39.7, 334.0], [39.8, 334.0], [39.9, 334.0], [40.0, 334.0], [40.1, 334.0], [40.2, 334.0], [40.3, 334.0], [40.4, 334.0], [40.5, 334.0], [40.6, 334.0], [40.7, 334.0], [40.8, 334.0], [40.9, 334.0], [41.0, 334.0], [41.1, 334.0], [41.2, 334.0], [41.3, 334.0], [41.4, 334.0], [41.5, 334.0], [41.6, 334.0], [41.7, 334.0], [41.8, 334.0], [41.9, 334.0], [42.0, 334.0], [42.1, 334.0], [42.2, 334.0], [42.3, 334.0], [42.4, 334.0], [42.5, 334.0], [42.6, 334.0], [42.7, 334.0], [42.8, 334.0], [42.9, 334.0], [43.0, 334.0], [43.1, 334.0], [43.2, 334.0], [43.3, 334.0], [43.4, 334.0], [43.5, 334.0], [43.6, 334.0], [43.7, 334.0], [43.8, 334.0], [43.9, 334.0], [44.0, 334.0], [44.1, 334.0], [44.2, 334.0], [44.3, 334.0], [44.4, 334.0], [44.5, 334.0], [44.6, 334.0], [44.7, 334.0], [44.8, 334.0], [44.9, 334.0], [45.0, 334.0], [45.1, 334.0], [45.2, 334.0], [45.3, 334.0], [45.4, 334.0], [45.5, 334.0], [45.6, 334.0], [45.7, 334.0], [45.8, 334.0], [45.9, 334.0], [46.0, 334.0], [46.1, 334.0], [46.2, 334.0], [46.3, 334.0], [46.4, 334.0], [46.5, 334.0], [46.6, 334.0], [46.7, 334.0], [46.8, 334.0], [46.9, 334.0], [47.0, 334.0], [47.1, 334.0], [47.2, 334.0], [47.3, 334.0], [47.4, 334.0], [47.5, 334.0], [47.6, 334.0], [47.7, 334.0], [47.8, 334.0], [47.9, 334.0], [48.0, 334.0], [48.1, 334.0], [48.2, 334.0], [48.3, 334.0], [48.4, 334.0], [48.5, 334.0], [48.6, 334.0], [48.7, 334.0], [48.8, 334.0], [48.9, 334.0], [49.0, 334.0], [49.1, 334.0], [49.2, 334.0], [49.3, 334.0], [49.4, 334.0], [49.5, 334.0], [49.6, 334.0], [49.7, 334.0], [49.8, 334.0], [49.9, 334.0], [50.0, 334.0], [50.1, 334.0], [50.2, 334.0], [50.3, 334.0], [50.4, 334.0], [50.5, 334.0], [50.6, 334.0], [50.7, 334.0], [50.8, 334.0], [50.9, 334.0], [51.0, 334.0], [51.1, 334.0], [51.2, 334.0], [51.3, 334.0], [51.4, 334.0], [51.5, 334.0], [51.6, 334.0], [51.7, 334.0], [51.8, 334.0], [51.9, 334.0], [52.0, 334.0], [52.1, 334.0], [52.2, 334.0], [52.3, 334.0], [52.4, 334.0], [52.5, 334.0], [52.6, 334.0], [52.7, 334.0], [52.8, 334.0], [52.9, 334.0], [53.0, 334.0], [53.1, 334.0], [53.2, 334.0], [53.3, 334.0], [53.4, 334.0], [53.5, 334.0], [53.6, 334.0], [53.7, 334.0], [53.8, 334.0], [53.9, 334.0], [54.0, 334.0], [54.1, 334.0], [54.2, 334.0], [54.3, 334.0], [54.4, 334.0], [54.5, 334.0], [54.6, 334.0], [54.7, 334.0], [54.8, 334.0], [54.9, 334.0], [55.0, 334.0], [55.1, 334.0], [55.2, 334.0], [55.3, 334.0], [55.4, 334.0], [55.5, 334.0], [55.6, 334.0], [55.7, 334.0], [55.8, 334.0], [55.9, 334.0], [56.0, 334.0], [56.1, 334.0], [56.2, 334.0], [56.3, 334.0], [56.4, 334.0], [56.5, 334.0], [56.6, 334.0], [56.7, 334.0], [56.8, 334.0], [56.9, 334.0], [57.0, 334.0], [57.1, 334.0], [57.2, 334.0], [57.3, 334.0], [57.4, 334.0], [57.5, 334.0], [57.6, 334.0], [57.7, 334.0], [57.8, 334.0], [57.9, 334.0], [58.0, 334.0], [58.1, 334.0], [58.2, 334.0], [58.3, 334.0], [58.4, 334.0], [58.5, 334.0], [58.6, 334.0], [58.7, 334.0], [58.8, 334.0], [58.9, 334.0], [59.0, 334.0], [59.1, 334.0], [59.2, 334.0], [59.3, 334.0], [59.4, 334.0], [59.5, 334.0], [59.6, 334.0], [59.7, 334.0], [59.8, 334.0], [59.9, 334.0], [60.0, 334.0], [60.1, 334.0], [60.2, 334.0], [60.3, 334.0], [60.4, 334.0], [60.5, 334.0], [60.6, 334.0], [60.7, 334.0], [60.8, 334.0], [60.9, 334.0], [61.0, 334.0], [61.1, 334.0], [61.2, 334.0], [61.3, 334.0], [61.4, 334.0], [61.5, 334.0], [61.6, 334.0], [61.7, 334.0], [61.8, 334.0], [61.9, 334.0], [62.0, 334.0], [62.1, 334.0], [62.2, 334.0], [62.3, 334.0], [62.4, 334.0], [62.5, 334.0], [62.6, 334.0], [62.7, 334.0], [62.8, 334.0], [62.9, 334.0], [63.0, 334.0], [63.1, 334.0], [63.2, 334.0], [63.3, 334.0], [63.4, 334.0], [63.5, 334.0], [63.6, 334.0], [63.7, 334.0], [63.8, 334.0], [63.9, 334.0], [64.0, 334.0], [64.1, 334.0], [64.2, 334.0], [64.3, 334.0], [64.4, 334.0], [64.5, 334.0], [64.6, 334.0], [64.7, 334.0], [64.8, 334.0], [64.9, 334.0], [65.0, 334.0], [65.1, 334.0], [65.2, 334.0], [65.3, 334.0], [65.4, 334.0], [65.5, 334.0], [65.6, 334.0], [65.7, 334.0], [65.8, 334.0], [65.9, 334.0], [66.0, 334.0], [66.1, 334.0], [66.2, 334.0], [66.3, 334.0], [66.4, 334.0], [66.5, 334.0], [66.6, 334.0], [66.7, 334.0], [66.8, 334.0], [66.9, 334.0], [67.0, 334.0], [67.1, 334.0], [67.2, 334.0], [67.3, 334.0], [67.4, 334.0], [67.5, 334.0], [67.6, 334.0], [67.7, 334.0], [67.8, 334.0], [67.9, 334.0], [68.0, 334.0], [68.1, 334.0], [68.2, 334.0], [68.3, 334.0], [68.4, 334.0], [68.5, 334.0], [68.6, 334.0], [68.7, 334.0], [68.8, 334.0], [68.9, 334.0], [69.0, 334.0], [69.1, 334.0], [69.2, 334.0], [69.3, 334.0], [69.4, 334.0], [69.5, 334.0], [69.6, 334.0], [69.7, 334.0], [69.8, 334.0], [69.9, 334.0], [70.0, 334.0], [70.1, 334.0], [70.2, 334.0], [70.3, 334.0], [70.4, 334.0], [70.5, 334.0], [70.6, 334.0], [70.7, 334.0], [70.8, 334.0], [70.9, 334.0], [71.0, 334.0], [71.1, 334.0], [71.2, 334.0], [71.3, 334.0], [71.4, 334.0], [71.5, 334.0], [71.6, 334.0], [71.7, 334.0], [71.8, 334.0], [71.9, 334.0], [72.0, 334.0], [72.1, 334.0], [72.2, 334.0], [72.3, 334.0], [72.4, 334.0], [72.5, 334.0], [72.6, 334.0], [72.7, 334.0], [72.8, 334.0], [72.9, 334.0], [73.0, 334.0], [73.1, 334.0], [73.2, 334.0], [73.3, 334.0], [73.4, 334.0], [73.5, 334.0], [73.6, 334.0], [73.7, 334.0], [73.8, 334.0], [73.9, 334.0], [74.0, 334.0], [74.1, 334.0], [74.2, 334.0], [74.3, 334.0], [74.4, 334.0], [74.5, 334.0], [74.6, 334.0], [74.7, 334.0], [74.8, 334.0], [74.9, 334.0], [75.0, 334.0], [75.1, 334.0], [75.2, 334.0], [75.3, 334.0], [75.4, 334.0], [75.5, 334.0], [75.6, 334.0], [75.7, 334.0], [75.8, 334.0], [75.9, 334.0], [76.0, 334.0], [76.1, 334.0], [76.2, 334.0], [76.3, 334.0], [76.4, 334.0], [76.5, 334.0], [76.6, 334.0], [76.7, 334.0], [76.8, 334.0], [76.9, 334.0], [77.0, 334.0], [77.1, 334.0], [77.2, 334.0], [77.3, 334.0], [77.4, 334.0], [77.5, 334.0], [77.6, 334.0], [77.7, 334.0], [77.8, 334.0], [77.9, 334.0], [78.0, 334.0], [78.1, 334.0], [78.2, 334.0], [78.3, 334.0], [78.4, 334.0], [78.5, 334.0], [78.6, 334.0], [78.7, 334.0], [78.8, 334.0], [78.9, 334.0], [79.0, 334.0], [79.1, 334.0], [79.2, 334.0], [79.3, 334.0], [79.4, 334.0], [79.5, 334.0], [79.6, 334.0], [79.7, 334.0], [79.8, 334.0], [79.9, 334.0], [80.0, 334.0], [80.1, 334.0], [80.2, 334.0], [80.3, 334.0], [80.4, 334.0], [80.5, 334.0], [80.6, 334.0], [80.7, 334.0], [80.8, 334.0], [80.9, 334.0], [81.0, 334.0], [81.1, 334.0], [81.2, 334.0], [81.3, 334.0], [81.4, 334.0], [81.5, 334.0], [81.6, 334.0], [81.7, 334.0], [81.8, 334.0], [81.9, 334.0], [82.0, 334.0], [82.1, 334.0], [82.2, 334.0], [82.3, 334.0], [82.4, 334.0], [82.5, 334.0], [82.6, 334.0], [82.7, 334.0], [82.8, 334.0], [82.9, 334.0], [83.0, 334.0], [83.1, 334.0], [83.2, 334.0], [83.3, 334.0], [83.4, 334.0], [83.5, 334.0], [83.6, 334.0], [83.7, 334.0], [83.8, 334.0], [83.9, 334.0], [84.0, 334.0], [84.1, 334.0], [84.2, 334.0], [84.3, 334.0], [84.4, 334.0], [84.5, 334.0], [84.6, 334.0], [84.7, 334.0], [84.8, 334.0], [84.9, 334.0], [85.0, 334.0], [85.1, 334.0], [85.2, 334.0], [85.3, 334.0], [85.4, 334.0], [85.5, 334.0], [85.6, 334.0], [85.7, 334.0], [85.8, 334.0], [85.9, 334.0], [86.0, 334.0], [86.1, 334.0], [86.2, 334.0], [86.3, 334.0], [86.4, 334.0], [86.5, 334.0], [86.6, 334.0], [86.7, 334.0], [86.8, 334.0], [86.9, 334.0], [87.0, 334.0], [87.1, 334.0], [87.2, 334.0], [87.3, 334.0], [87.4, 334.0], [87.5, 334.0], [87.6, 334.0], [87.7, 334.0], [87.8, 334.0], [87.9, 334.0], [88.0, 334.0], [88.1, 334.0], [88.2, 334.0], [88.3, 334.0], [88.4, 334.0], [88.5, 334.0], [88.6, 334.0], [88.7, 334.0], [88.8, 334.0], [88.9, 334.0], [89.0, 334.0], [89.1, 334.0], [89.2, 334.0], [89.3, 334.0], [89.4, 334.0], [89.5, 334.0], [89.6, 334.0], [89.7, 334.0], [89.8, 334.0], [89.9, 334.0], [90.0, 334.0], [90.1, 334.0], [90.2, 334.0], [90.3, 334.0], [90.4, 334.0], [90.5, 334.0], [90.6, 334.0], [90.7, 334.0], [90.8, 334.0], [90.9, 334.0], [91.0, 334.0], [91.1, 334.0], [91.2, 334.0], [91.3, 334.0], [91.4, 334.0], [91.5, 334.0], [91.6, 334.0], [91.7, 334.0], [91.8, 334.0], [91.9, 334.0], [92.0, 334.0], [92.1, 334.0], [92.2, 334.0], [92.3, 334.0], [92.4, 334.0], [92.5, 334.0], [92.6, 334.0], [92.7, 334.0], [92.8, 334.0], [92.9, 334.0], [93.0, 334.0], [93.1, 334.0], [93.2, 334.0], [93.3, 334.0], [93.4, 334.0], [93.5, 334.0], [93.6, 334.0], [93.7, 334.0], [93.8, 334.0], [93.9, 334.0], [94.0, 334.0], [94.1, 334.0], [94.2, 334.0], [94.3, 334.0], [94.4, 334.0], [94.5, 334.0], [94.6, 334.0], [94.7, 334.0], [94.8, 334.0], [94.9, 334.0], [95.0, 334.0], [95.1, 334.0], [95.2, 334.0], [95.3, 334.0], [95.4, 334.0], [95.5, 334.0], [95.6, 334.0], [95.7, 334.0], [95.8, 334.0], [95.9, 334.0], [96.0, 334.0], [96.1, 334.0], [96.2, 334.0], [96.3, 334.0], [96.4, 334.0], [96.5, 334.0], [96.6, 334.0], [96.7, 334.0], [96.8, 334.0], [96.9, 334.0], [97.0, 334.0], [97.1, 334.0], [97.2, 334.0], [97.3, 334.0], [97.4, 334.0], [97.5, 334.0], [97.6, 334.0], [97.7, 334.0], [97.8, 334.0], [97.9, 334.0], [98.0, 334.0], [98.1, 334.0], [98.2, 334.0], [98.3, 334.0], [98.4, 334.0], [98.5, 334.0], [98.6, 334.0], [98.7, 334.0], [98.8, 334.0], [98.9, 334.0], [99.0, 334.0], [99.1, 334.0], [99.2, 334.0], [99.3, 334.0], [99.4, 334.0], [99.5, 334.0], [99.6, 334.0], [99.7, 334.0], [99.8, 334.0], [99.9, 334.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[0.0, 30.0], [0.1, 71.0], [0.2, 118.0], [0.3, 118.0], [0.4, 141.0], [0.5, 147.0], [0.6, 154.0], [0.7, 161.0], [0.8, 165.0], [0.9, 177.0], [1.0, 196.0], [1.1, 201.0], [1.2, 206.0], [1.3, 207.0], [1.4, 207.0], [1.5, 219.0], [1.6, 221.0], [1.7, 246.0], [1.8, 250.0], [1.9, 262.0], [2.0, 275.0], [2.1, 282.0], [2.2, 294.0], [2.3, 338.0], [2.4, 343.0], [2.5, 365.0], [2.6, 408.0], [2.7, 464.0], [2.8, 497.0], [2.9, 538.0], [3.0, 540.0], [3.1, 604.0], [3.2, 606.0], [3.3, 655.0], [3.4, 660.0], [3.5, 690.0], [3.6, 698.0], [3.7, 707.0], [3.8, 711.0], [3.9, 712.0], [4.0, 731.0], [4.1, 748.0], [4.2, 758.0], [4.3, 768.0], [4.4, 772.0], [4.5, 777.0], [4.6, 784.0], [4.7, 788.0], [4.8, 789.0], [4.9, 793.0], [5.0, 796.0], [5.1, 801.0], [5.2, 802.0], [5.3, 803.0], [5.4, 807.0], [5.5, 809.0], [5.6, 814.0], [5.7, 819.0], [5.8, 819.0], [5.9, 823.0], [6.0, 823.0], [6.1, 825.0], [6.2, 828.0], [6.3, 829.0], [6.4, 833.0], [6.5, 834.0], [6.6, 835.0], [6.7, 835.0], [6.8, 836.0], [6.9, 838.0], [7.0, 841.0], [7.1, 842.0], [7.2, 842.0], [7.3, 842.0], [7.4, 842.0], [7.5, 845.0], [7.6, 846.0], [7.7, 851.0], [7.8, 851.0], [7.9, 852.0], [8.0, 853.0], [8.1, 855.0], [8.2, 858.0], [8.3, 860.0], [8.4, 861.0], [8.5, 862.0], [8.6, 864.0], [8.7, 864.0], [8.8, 866.0], [8.9, 868.0], [9.0, 869.0], [9.1, 870.0], [9.2, 871.0], [9.3, 873.0], [9.4, 874.0], [9.5, 874.0], [9.6, 874.0], [9.7, 876.0], [9.8, 878.0], [9.9, 879.0], [10.0, 880.0], [10.1, 881.0], [10.2, 885.0], [10.3, 886.0], [10.4, 888.0], [10.5, 890.0], [10.6, 892.0], [10.7, 892.0], [10.8, 892.0], [10.9, 894.0], [11.0, 896.0], [11.1, 897.0], [11.2, 898.0], [11.3, 900.0], [11.4, 900.0], [11.5, 901.0], [11.6, 901.0], [11.7, 902.0], [11.8, 903.0], [11.9, 903.0], [12.0, 903.0], [12.1, 905.0], [12.2, 906.0], [12.3, 908.0], [12.4, 908.0], [12.5, 909.0], [12.6, 911.0], [12.7, 912.0], [12.8, 912.0], [12.9, 912.0], [13.0, 913.0], [13.1, 913.0], [13.2, 914.0], [13.3, 915.0], [13.4, 915.0], [13.5, 916.0], [13.6, 916.0], [13.7, 918.0], [13.8, 919.0], [13.9, 920.0], [14.0, 922.0], [14.1, 922.0], [14.2, 923.0], [14.3, 923.0], [14.4, 924.0], [14.5, 926.0], [14.6, 928.0], [14.7, 928.0], [14.8, 929.0], [14.9, 930.0], [15.0, 931.0], [15.1, 932.0], [15.2, 933.0], [15.3, 934.0], [15.4, 934.0], [15.5, 935.0], [15.6, 935.0], [15.7, 937.0], [15.8, 937.0], [15.9, 937.0], [16.0, 938.0], [16.1, 938.0], [16.2, 939.0], [16.3, 940.0], [16.4, 940.0], [16.5, 941.0], [16.6, 942.0], [16.7, 942.0], [16.8, 944.0], [16.9, 944.0], [17.0, 945.0], [17.1, 946.0], [17.2, 946.0], [17.3, 946.0], [17.4, 946.0], [17.5, 947.0], [17.6, 948.0], [17.7, 948.0], [17.8, 949.0], [17.9, 951.0], [18.0, 952.0], [18.1, 952.0], [18.2, 952.0], [18.3, 955.0], [18.4, 956.0], [18.5, 958.0], [18.6, 959.0], [18.7, 960.0], [18.8, 960.0], [18.9, 960.0], [19.0, 960.0], [19.1, 962.0], [19.2, 965.0], [19.3, 966.0], [19.4, 966.0], [19.5, 968.0], [19.6, 968.0], [19.7, 968.0], [19.8, 971.0], [19.9, 972.0], [20.0, 973.0], [20.1, 973.0], [20.2, 975.0], [20.3, 976.0], [20.4, 977.0], [20.5, 978.0], [20.6, 978.0], [20.7, 978.0], [20.8, 980.0], [20.9, 980.0], [21.0, 981.0], [21.1, 982.0], [21.2, 982.0], [21.3, 982.0], [21.4, 983.0], [21.5, 984.0], [21.6, 984.0], [21.7, 985.0], [21.8, 986.0], [21.9, 986.0], [22.0, 987.0], [22.1, 988.0], [22.2, 988.0], [22.3, 989.0], [22.4, 990.0], [22.5, 990.0], [22.6, 991.0], [22.7, 991.0], [22.8, 991.0], [22.9, 991.0], [23.0, 992.0], [23.1, 995.0], [23.2, 995.0], [23.3, 997.0], [23.4, 998.0], [23.5, 999.0], [23.6, 999.0], [23.7, 1000.0], [23.8, 1000.0], [23.9, 1001.0], [24.0, 1001.0], [24.1, 1002.0], [24.2, 1002.0], [24.3, 1002.0], [24.4, 1002.0], [24.5, 1003.0], [24.6, 1003.0], [24.7, 1003.0], [24.8, 1004.0], [24.9, 1004.0], [25.0, 1005.0], [25.1, 1005.0], [25.2, 1005.0], [25.3, 1006.0], [25.4, 1007.0], [25.5, 1008.0], [25.6, 1008.0], [25.7, 1008.0], [25.8, 1009.0], [25.9, 1009.0], [26.0, 1010.0], [26.1, 1010.0], [26.2, 1011.0], [26.3, 1012.0], [26.4, 1012.0], [26.5, 1012.0], [26.6, 1012.0], [26.7, 1012.0], [26.8, 1014.0], [26.9, 1014.0], [27.0, 1015.0], [27.1, 1016.0], [27.2, 1017.0], [27.3, 1017.0], [27.4, 1019.0], [27.5, 1020.0], [27.6, 1021.0], [27.7, 1022.0], [27.8, 1022.0], [27.9, 1022.0], [28.0, 1022.0], [28.1, 1022.0], [28.2, 1024.0], [28.3, 1024.0], [28.4, 1024.0], [28.5, 1024.0], [28.6, 1024.0], [28.7, 1027.0], [28.8, 1028.0], [28.9, 1028.0], [29.0, 1029.0], [29.1, 1029.0], [29.2, 1029.0], [29.3, 1031.0], [29.4, 1032.0], [29.5, 1033.0], [29.6, 1033.0], [29.7, 1034.0], [29.8, 1034.0], [29.9, 1035.0], [30.0, 1036.0], [30.1, 1036.0], [30.2, 1037.0], [30.3, 1038.0], [30.4, 1038.0], [30.5, 1038.0], [30.6, 1038.0], [30.7, 1039.0], [30.8, 1039.0], [30.9, 1041.0], [31.0, 1041.0], [31.1, 1041.0], [31.2, 1041.0], [31.3, 1042.0], [31.4, 1043.0], [31.5, 1045.0], [31.6, 1045.0], [31.7, 1047.0], [31.8, 1048.0], [31.9, 1048.0], [32.0, 1049.0], [32.1, 1049.0], [32.2, 1050.0], [32.3, 1050.0], [32.4, 1053.0], [32.5, 1053.0], [32.6, 1053.0], [32.7, 1054.0], [32.8, 1055.0], [32.9, 1055.0], [33.0, 1056.0], [33.1, 1056.0], [33.2, 1057.0], [33.3, 1058.0], [33.4, 1059.0], [33.5, 1060.0], [33.6, 1061.0], [33.7, 1061.0], [33.8, 1061.0], [33.9, 1061.0], [34.0, 1061.0], [34.1, 1063.0], [34.2, 1063.0], [34.3, 1064.0], [34.4, 1064.0], [34.5, 1064.0], [34.6, 1065.0], [34.7, 1065.0], [34.8, 1066.0], [34.9, 1066.0], [35.0, 1067.0], [35.1, 1067.0], [35.2, 1067.0], [35.3, 1068.0], [35.4, 1069.0], [35.5, 1069.0], [35.6, 1069.0], [35.7, 1070.0], [35.8, 1070.0], [35.9, 1072.0], [36.0, 1072.0], [36.1, 1072.0], [36.2, 1073.0], [36.3, 1074.0], [36.4, 1074.0], [36.5, 1076.0], [36.6, 1076.0], [36.7, 1076.0], [36.8, 1077.0], [36.9, 1078.0], [37.0, 1078.0], [37.1, 1078.0], [37.2, 1078.0], [37.3, 1078.0], [37.4, 1079.0], [37.5, 1079.0], [37.6, 1079.0], [37.7, 1080.0], [37.8, 1080.0], [37.9, 1081.0], [38.0, 1082.0], [38.1, 1084.0], [38.2, 1084.0], [38.3, 1085.0], [38.4, 1085.0], [38.5, 1085.0], [38.6, 1088.0], [38.7, 1088.0], [38.8, 1088.0], [38.9, 1090.0], [39.0, 1090.0], [39.1, 1090.0], [39.2, 1092.0], [39.3, 1093.0], [39.4, 1093.0], [39.5, 1095.0], [39.6, 1097.0], [39.7, 1098.0], [39.8, 1098.0], [39.9, 1100.0], [40.0, 1100.0], [40.1, 1101.0], [40.2, 1101.0], [40.3, 1102.0], [40.4, 1103.0], [40.5, 1103.0], [40.6, 1105.0], [40.7, 1105.0], [40.8, 1105.0], [40.9, 1106.0], [41.0, 1107.0], [41.1, 1107.0], [41.2, 1109.0], [41.3, 1110.0], [41.4, 1111.0], [41.5, 1111.0], [41.6, 1114.0], [41.7, 1115.0], [41.8, 1115.0], [41.9, 1117.0], [42.0, 1118.0], [42.1, 1119.0], [42.2, 1120.0], [42.3, 1122.0], [42.4, 1123.0], [42.5, 1123.0], [42.6, 1123.0], [42.7, 1123.0], [42.8, 1123.0], [42.9, 1124.0], [43.0, 1124.0], [43.1, 1125.0], [43.2, 1128.0], [43.3, 1128.0], [43.4, 1128.0], [43.5, 1128.0], [43.6, 1129.0], [43.7, 1130.0], [43.8, 1131.0], [43.9, 1131.0], [44.0, 1132.0], [44.1, 1132.0], [44.2, 1133.0], [44.3, 1133.0], [44.4, 1134.0], [44.5, 1135.0], [44.6, 1136.0], [44.7, 1137.0], [44.8, 1138.0], [44.9, 1139.0], [45.0, 1139.0], [45.1, 1139.0], [45.2, 1140.0], [45.3, 1140.0], [45.4, 1141.0], [45.5, 1143.0], [45.6, 1146.0], [45.7, 1146.0], [45.8, 1147.0], [45.9, 1147.0], [46.0, 1147.0], [46.1, 1148.0], [46.2, 1150.0], [46.3, 1151.0], [46.4, 1152.0], [46.5, 1152.0], [46.6, 1154.0], [46.7, 1154.0], [46.8, 1154.0], [46.9, 1155.0], [47.0, 1155.0], [47.1, 1155.0], [47.2, 1155.0], [47.3, 1157.0], [47.4, 1157.0], [47.5, 1158.0], [47.6, 1158.0], [47.7, 1159.0], [47.8, 1159.0], [47.9, 1159.0], [48.0, 1160.0], [48.1, 1160.0], [48.2, 1160.0], [48.3, 1162.0], [48.4, 1163.0], [48.5, 1163.0], [48.6, 1166.0], [48.7, 1167.0], [48.8, 1167.0], [48.9, 1167.0], [49.0, 1167.0], [49.1, 1168.0], [49.2, 1168.0], [49.3, 1169.0], [49.4, 1169.0], [49.5, 1170.0], [49.6, 1170.0], [49.7, 1171.0], [49.8, 1171.0], [49.9, 1172.0], [50.0, 1172.0], [50.1, 1172.0], [50.2, 1173.0], [50.3, 1173.0], [50.4, 1173.0], [50.5, 1173.0], [50.6, 1174.0], [50.7, 1174.0], [50.8, 1174.0], [50.9, 1175.0], [51.0, 1175.0], [51.1, 1175.0], [51.2, 1176.0], [51.3, 1176.0], [51.4, 1176.0], [51.5, 1177.0], [51.6, 1178.0], [51.7, 1178.0], [51.8, 1178.0], [51.9, 1178.0], [52.0, 1179.0], [52.1, 1180.0], [52.2, 1180.0], [52.3, 1182.0], [52.4, 1183.0], [52.5, 1183.0], [52.6, 1185.0], [52.7, 1186.0], [52.8, 1186.0], [52.9, 1188.0], [53.0, 1188.0], [53.1, 1189.0], [53.2, 1189.0], [53.3, 1189.0], [53.4, 1190.0], [53.5, 1191.0], [53.6, 1191.0], [53.7, 1191.0], [53.8, 1191.0], [53.9, 1192.0], [54.0, 1192.0], [54.1, 1193.0], [54.2, 1194.0], [54.3, 1195.0], [54.4, 1196.0], [54.5, 1197.0], [54.6, 1197.0], [54.7, 1197.0], [54.8, 1198.0], [54.9, 1200.0], [55.0, 1200.0], [55.1, 1203.0], [55.2, 1203.0], [55.3, 1203.0], [55.4, 1203.0], [55.5, 1204.0], [55.6, 1204.0], [55.7, 1205.0], [55.8, 1205.0], [55.9, 1205.0], [56.0, 1205.0], [56.1, 1206.0], [56.2, 1206.0], [56.3, 1207.0], [56.4, 1207.0], [56.5, 1207.0], [56.6, 1209.0], [56.7, 1210.0], [56.8, 1210.0], [56.9, 1210.0], [57.0, 1211.0], [57.1, 1211.0], [57.2, 1212.0], [57.3, 1213.0], [57.4, 1215.0], [57.5, 1216.0], [57.6, 1216.0], [57.7, 1217.0], [57.8, 1219.0], [57.9, 1219.0], [58.0, 1219.0], [58.1, 1219.0], [58.2, 1221.0], [58.3, 1222.0], [58.4, 1222.0], [58.5, 1222.0], [58.6, 1223.0], [58.7, 1224.0], [58.8, 1226.0], [58.9, 1226.0], [59.0, 1226.0], [59.1, 1227.0], [59.2, 1227.0], [59.3, 1227.0], [59.4, 1228.0], [59.5, 1229.0], [59.6, 1230.0], [59.7, 1230.0], [59.8, 1231.0], [59.9, 1231.0], [60.0, 1232.0], [60.1, 1233.0], [60.2, 1233.0], [60.3, 1233.0], [60.4, 1235.0], [60.5, 1236.0], [60.6, 1239.0], [60.7, 1239.0], [60.8, 1239.0], [60.9, 1240.0], [61.0, 1240.0], [61.1, 1242.0], [61.2, 1243.0], [61.3, 1243.0], [61.4, 1243.0], [61.5, 1243.0], [61.6, 1244.0], [61.7, 1244.0], [61.8, 1246.0], [61.9, 1247.0], [62.0, 1247.0], [62.1, 1247.0], [62.2, 1248.0], [62.3, 1249.0], [62.4, 1250.0], [62.5, 1251.0], [62.6, 1251.0], [62.7, 1253.0], [62.8, 1253.0], [62.9, 1254.0], [63.0, 1255.0], [63.1, 1256.0], [63.2, 1257.0], [63.3, 1257.0], [63.4, 1257.0], [63.5, 1258.0], [63.6, 1259.0], [63.7, 1260.0], [63.8, 1260.0], [63.9, 1260.0], [64.0, 1261.0], [64.1, 1262.0], [64.2, 1264.0], [64.3, 1264.0], [64.4, 1265.0], [64.5, 1266.0], [64.6, 1266.0], [64.7, 1266.0], [64.8, 1269.0], [64.9, 1269.0], [65.0, 1270.0], [65.1, 1271.0], [65.2, 1271.0], [65.3, 1272.0], [65.4, 1275.0], [65.5, 1275.0], [65.6, 1276.0], [65.7, 1277.0], [65.8, 1277.0], [65.9, 1278.0], [66.0, 1279.0], [66.1, 1281.0], [66.2, 1281.0], [66.3, 1281.0], [66.4, 1285.0], [66.5, 1288.0], [66.6, 1289.0], [66.7, 1290.0], [66.8, 1290.0], [66.9, 1290.0], [67.0, 1291.0], [67.1, 1291.0], [67.2, 1291.0], [67.3, 1291.0], [67.4, 1292.0], [67.5, 1292.0], [67.6, 1293.0], [67.7, 1295.0], [67.8, 1295.0], [67.9, 1296.0], [68.0, 1296.0], [68.1, 1297.0], [68.2, 1298.0], [68.3, 1298.0], [68.4, 1300.0], [68.5, 1300.0], [68.6, 1301.0], [68.7, 1305.0], [68.8, 1311.0], [68.9, 1313.0], [69.0, 1314.0], [69.1, 1314.0], [69.2, 1315.0], [69.3, 1316.0], [69.4, 1317.0], [69.5, 1318.0], [69.6, 1319.0], [69.7, 1320.0], [69.8, 1322.0], [69.9, 1325.0], [70.0, 1330.0], [70.1, 1332.0], [70.2, 1332.0], [70.3, 1333.0], [70.4, 1335.0], [70.5, 1338.0], [70.6, 1340.0], [70.7, 1343.0], [70.8, 1349.0], [70.9, 1349.0], [71.0, 1351.0], [71.1, 1354.0], [71.2, 1356.0], [71.3, 1358.0], [71.4, 1358.0], [71.5, 1360.0], [71.6, 1361.0], [71.7, 1361.0], [71.8, 1361.0], [71.9, 1363.0], [72.0, 1365.0], [72.1, 1366.0], [72.2, 1368.0], [72.3, 1369.0], [72.4, 1370.0], [72.5, 1372.0], [72.6, 1374.0], [72.7, 1375.0], [72.8, 1376.0], [72.9, 1377.0], [73.0, 1378.0], [73.1, 1379.0], [73.2, 1379.0], [73.3, 1381.0], [73.4, 1382.0], [73.5, 1383.0], [73.6, 1384.0], [73.7, 1385.0], [73.8, 1386.0], [73.9, 1386.0], [74.0, 1386.0], [74.1, 1387.0], [74.2, 1388.0], [74.3, 1388.0], [74.4, 1389.0], [74.5, 1390.0], [74.6, 1394.0], [74.7, 1395.0], [74.8, 1396.0], [74.9, 1398.0], [75.0, 1398.0], [75.1, 1403.0], [75.2, 1403.0], [75.3, 1403.0], [75.4, 1404.0], [75.5, 1404.0], [75.6, 1407.0], [75.7, 1408.0], [75.8, 1409.0], [75.9, 1410.0], [76.0, 1411.0], [76.1, 1415.0], [76.2, 1418.0], [76.3, 1419.0], [76.4, 1421.0], [76.5, 1421.0], [76.6, 1422.0], [76.7, 1425.0], [76.8, 1426.0], [76.9, 1428.0], [77.0, 1429.0], [77.1, 1429.0], [77.2, 1431.0], [77.3, 1432.0], [77.4, 1433.0], [77.5, 1434.0], [77.6, 1437.0], [77.7, 1438.0], [77.8, 1440.0], [77.9, 1441.0], [78.0, 1444.0], [78.1, 1444.0], [78.2, 1445.0], [78.3, 1445.0], [78.4, 1446.0], [78.5, 1447.0], [78.6, 1447.0], [78.7, 1447.0], [78.8, 1448.0], [78.9, 1449.0], [79.0, 1449.0], [79.1, 1450.0], [79.2, 1450.0], [79.3, 1452.0], [79.4, 1454.0], [79.5, 1456.0], [79.6, 1456.0], [79.7, 1456.0], [79.8, 1457.0], [79.9, 1457.0], [80.0, 1457.0], [80.1, 1458.0], [80.2, 1458.0], [80.3, 1459.0], [80.4, 1459.0], [80.5, 1462.0], [80.6, 1462.0], [80.7, 1463.0], [80.8, 1463.0], [80.9, 1466.0], [81.0, 1466.0], [81.1, 1467.0], [81.2, 1468.0], [81.3, 1470.0], [81.4, 1473.0], [81.5, 1473.0], [81.6, 1474.0], [81.7, 1477.0], [81.8, 1478.0], [81.9, 1480.0], [82.0, 1482.0], [82.1, 1482.0], [82.2, 1483.0], [82.3, 1483.0], [82.4, 1486.0], [82.5, 1489.0], [82.6, 1493.0], [82.7, 1493.0], [82.8, 1493.0], [82.9, 1496.0], [83.0, 1496.0], [83.1, 1497.0], [83.2, 1497.0], [83.3, 1502.0], [83.4, 1502.0], [83.5, 1503.0], [83.6, 1504.0], [83.7, 1505.0], [83.8, 1505.0], [83.9, 1505.0], [84.0, 1507.0], [84.1, 1509.0], [84.2, 1511.0], [84.3, 1511.0], [84.4, 1514.0], [84.5, 1515.0], [84.6, 1515.0], [84.7, 1516.0], [84.8, 1516.0], [84.9, 1516.0], [85.0, 1516.0], [85.1, 1517.0], [85.2, 1517.0], [85.3, 1519.0], [85.4, 1523.0], [85.5, 1524.0], [85.6, 1526.0], [85.7, 1526.0], [85.8, 1527.0], [85.9, 1531.0], [86.0, 1531.0], [86.1, 1534.0], [86.2, 1535.0], [86.3, 1537.0], [86.4, 1538.0], [86.5, 1544.0], [86.6, 1545.0], [86.7, 1547.0], [86.8, 1557.0], [86.9, 1557.0], [87.0, 1559.0], [87.1, 1560.0], [87.2, 1562.0], [87.3, 1563.0], [87.4, 1564.0], [87.5, 1564.0], [87.6, 1565.0], [87.7, 1568.0], [87.8, 1571.0], [87.9, 1571.0], [88.0, 1573.0], [88.1, 1577.0], [88.2, 1589.0], [88.3, 1593.0], [88.4, 1597.0], [88.5, 1606.0], [88.6, 1612.0], [88.7, 1615.0], [88.8, 1615.0], [88.9, 1619.0], [89.0, 1620.0], [89.1, 1623.0], [89.2, 1626.0], [89.3, 1627.0], [89.4, 1632.0], [89.5, 1634.0], [89.6, 1634.0], [89.7, 1634.0], [89.8, 1635.0], [89.9, 1641.0], [90.0, 1643.0], [90.1, 1653.0], [90.2, 1654.0], [90.3, 1656.0], [90.4, 1657.0], [90.5, 1658.0], [90.6, 1658.0], [90.7, 1664.0], [90.8, 1665.0], [90.9, 1669.0], [91.0, 1670.0], [91.1, 1674.0], [91.2, 1684.0], [91.3, 1684.0], [91.4, 1687.0], [91.5, 1688.0], [91.6, 1691.0], [91.7, 1692.0], [91.8, 1695.0], [91.9, 1702.0], [92.0, 1703.0], [92.1, 1706.0], [92.2, 1708.0], [92.3, 1710.0], [92.4, 1729.0], [92.5, 1732.0], [92.6, 1733.0], [92.7, 1738.0], [92.8, 1745.0], [92.9, 1748.0], [93.0, 1765.0], [93.1, 1766.0], [93.2, 1766.0], [93.3, 1770.0], [93.4, 1772.0], [93.5, 1773.0], [93.6, 1782.0], [93.7, 1783.0], [93.8, 1784.0], [93.9, 1790.0], [94.0, 1794.0], [94.1, 1802.0], [94.2, 1809.0], [94.3, 1810.0], [94.4, 1812.0], [94.5, 1813.0], [94.6, 1822.0], [94.7, 1825.0], [94.8, 1849.0], [94.9, 1857.0], [95.0, 1871.0], [95.1, 1873.0], [95.2, 1874.0], [95.3, 1879.0], [95.4, 1885.0], [95.5, 1887.0], [95.6, 1893.0], [95.7, 1911.0], [95.8, 1912.0], [95.9, 1919.0], [96.0, 1928.0], [96.1, 1929.0], [96.2, 1942.0], [96.3, 1962.0], [96.4, 1965.0], [96.5, 1965.0], [96.6, 1966.0], [96.7, 1972.0], [96.8, 2011.0], [96.9, 2014.0], [97.0, 2015.0], [97.1, 2067.0], [97.2, 2100.0], [97.3, 2124.0], [97.4, 2145.0], [97.5, 2152.0], [97.6, 2219.0], [97.7, 2231.0], [97.8, 2272.0], [97.9, 2293.0], [98.0, 2339.0], [98.1, 2350.0], [98.2, 2444.0], [98.3, 2470.0], [98.4, 2514.0], [98.5, 2529.0], [98.6, 2537.0], [98.7, 2752.0], [98.8, 2806.0], [98.9, 2809.0], [99.0, 2823.0], [99.1, 2830.0], [99.2, 2855.0], [99.3, 2924.0], [99.4, 2997.0], [99.5, 3076.0], [99.6, 3083.0], [99.7, 3123.0], [99.8, 3193.0], [99.9, 3257.0]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[0.0, 46.0], [0.1, 80.0], [0.2, 85.0], [0.3, 94.0], [0.4, 120.0], [0.5, 127.0], [0.6, 141.0], [0.7, 147.0], [0.8, 157.0], [0.9, 165.0], [1.0, 175.0], [1.1, 182.0], [1.2, 190.0], [1.3, 199.0], [1.4, 210.0], [1.5, 221.0], [1.6, 231.0], [1.7, 242.0], [1.8, 255.0], [1.9, 278.0], [2.0, 298.0], [2.1, 332.0], [2.2, 352.0], [2.3, 390.0], [2.4, 447.0], [2.5, 480.0], [2.6, 508.0], [2.7, 561.0], [2.8, 583.0], [2.9, 633.0], [3.0, 657.0], [3.1, 697.0], [3.2, 728.0], [3.3, 744.0], [3.4, 750.0], [3.5, 769.0], [3.6, 775.0], [3.7, 781.0], [3.8, 790.0], [3.9, 798.0], [4.0, 805.0], [4.1, 808.0], [4.2, 810.0], [4.3, 811.0], [4.4, 813.0], [4.5, 815.0], [4.6, 823.0], [4.7, 823.0], [4.8, 828.0], [4.9, 831.0], [5.0, 833.0], [5.1, 836.0], [5.2, 839.0], [5.3, 841.0], [5.4, 844.0], [5.5, 846.0], [5.6, 848.0], [5.7, 849.0], [5.8, 852.0], [5.9, 854.0], [6.0, 856.0], [6.1, 858.0], [6.2, 860.0], [6.3, 861.0], [6.4, 863.0], [6.5, 864.0], [6.6, 867.0], [6.7, 869.0], [6.8, 871.0], [6.9, 873.0], [7.0, 873.0], [7.1, 875.0], [7.2, 877.0], [7.3, 879.0], [7.4, 881.0], [7.5, 881.0], [7.6, 882.0], [7.7, 884.0], [7.8, 885.0], [7.9, 886.0], [8.0, 887.0], [8.1, 888.0], [8.2, 889.0], [8.3, 890.0], [8.4, 892.0], [8.5, 893.0], [8.6, 895.0], [8.7, 896.0], [8.8, 898.0], [8.9, 898.0], [9.0, 899.0], [9.1, 900.0], [9.2, 900.0], [9.3, 901.0], [9.4, 902.0], [9.5, 903.0], [9.6, 903.0], [9.7, 905.0], [9.8, 905.0], [9.9, 906.0], [10.0, 907.0], [10.1, 910.0], [10.2, 911.0], [10.3, 912.0], [10.4, 913.0], [10.5, 914.0], [10.6, 914.0], [10.7, 915.0], [10.8, 917.0], [10.9, 918.0], [11.0, 919.0], [11.1, 920.0], [11.2, 922.0], [11.3, 922.0], [11.4, 923.0], [11.5, 924.0], [11.6, 925.0], [11.7, 926.0], [11.8, 927.0], [11.9, 927.0], [12.0, 928.0], [12.1, 929.0], [12.2, 930.0], [12.3, 931.0], [12.4, 933.0], [12.5, 933.0], [12.6, 934.0], [12.7, 935.0], [12.8, 935.0], [12.9, 936.0], [13.0, 938.0], [13.1, 938.0], [13.2, 939.0], [13.3, 940.0], [13.4, 941.0], [13.5, 942.0], [13.6, 943.0], [13.7, 943.0], [13.8, 944.0], [13.9, 944.0], [14.0, 945.0], [14.1, 946.0], [14.2, 946.0], [14.3, 947.0], [14.4, 948.0], [14.5, 949.0], [14.6, 949.0], [14.7, 949.0], [14.8, 950.0], [14.9, 951.0], [15.0, 952.0], [15.1, 952.0], [15.2, 953.0], [15.3, 954.0], [15.4, 954.0], [15.5, 955.0], [15.6, 955.0], [15.7, 956.0], [15.8, 957.0], [15.9, 958.0], [16.0, 959.0], [16.1, 959.0], [16.2, 960.0], [16.3, 961.0], [16.4, 962.0], [16.5, 962.0], [16.6, 964.0], [16.7, 965.0], [16.8, 966.0], [16.9, 967.0], [17.0, 967.0], [17.1, 968.0], [17.2, 968.0], [17.3, 969.0], [17.4, 969.0], [17.5, 970.0], [17.6, 971.0], [17.7, 971.0], [17.8, 971.0], [17.9, 972.0], [18.0, 972.0], [18.1, 973.0], [18.2, 974.0], [18.3, 974.0], [18.4, 975.0], [18.5, 977.0], [18.6, 977.0], [18.7, 978.0], [18.8, 979.0], [18.9, 980.0], [19.0, 981.0], [19.1, 981.0], [19.2, 982.0], [19.3, 983.0], [19.4, 984.0], [19.5, 985.0], [19.6, 986.0], [19.7, 986.0], [19.8, 987.0], [19.9, 988.0], [20.0, 989.0], [20.1, 990.0], [20.2, 991.0], [20.3, 992.0], [20.4, 992.0], [20.5, 994.0], [20.6, 994.0], [20.7, 995.0], [20.8, 995.0], [20.9, 996.0], [21.0, 997.0], [21.1, 998.0], [21.2, 999.0], [21.3, 999.0], [21.4, 1000.0], [21.5, 1001.0], [21.6, 1002.0], [21.7, 1003.0], [21.8, 1003.0], [21.9, 1004.0], [22.0, 1005.0], [22.1, 1005.0], [22.2, 1006.0], [22.3, 1007.0], [22.4, 1007.0], [22.5, 1008.0], [22.6, 1008.0], [22.7, 1009.0], [22.8, 1010.0], [22.9, 1011.0], [23.0, 1011.0], [23.1, 1012.0], [23.2, 1013.0], [23.3, 1014.0], [23.4, 1014.0], [23.5, 1014.0], [23.6, 1015.0], [23.7, 1016.0], [23.8, 1016.0], [23.9, 1017.0], [24.0, 1018.0], [24.1, 1019.0], [24.2, 1019.0], [24.3, 1020.0], [24.4, 1020.0], [24.5, 1021.0], [24.6, 1022.0], [24.7, 1022.0], [24.8, 1023.0], [24.9, 1024.0], [25.0, 1025.0], [25.1, 1026.0], [25.2, 1026.0], [25.3, 1027.0], [25.4, 1028.0], [25.5, 1030.0], [25.6, 1030.0], [25.7, 1031.0], [25.8, 1032.0], [25.9, 1033.0], [26.0, 1035.0], [26.1, 1036.0], [26.2, 1037.0], [26.3, 1037.0], [26.4, 1038.0], [26.5, 1039.0], [26.6, 1041.0], [26.7, 1042.0], [26.8, 1042.0], [26.9, 1043.0], [27.0, 1044.0], [27.1, 1045.0], [27.2, 1046.0], [27.3, 1046.0], [27.4, 1047.0], [27.5, 1047.0], [27.6, 1049.0], [27.7, 1049.0], [27.8, 1050.0], [27.9, 1050.0], [28.0, 1051.0], [28.1, 1051.0], [28.2, 1052.0], [28.3, 1053.0], [28.4, 1054.0], [28.5, 1055.0], [28.6, 1056.0], [28.7, 1056.0], [28.8, 1058.0], [28.9, 1060.0], [29.0, 1061.0], [29.1, 1062.0], [29.2, 1063.0], [29.3, 1063.0], [29.4, 1064.0], [29.5, 1064.0], [29.6, 1065.0], [29.7, 1065.0], [29.8, 1066.0], [29.9, 1067.0], [30.0, 1068.0], [30.1, 1068.0], [30.2, 1069.0], [30.3, 1070.0], [30.4, 1070.0], [30.5, 1071.0], [30.6, 1071.0], [30.7, 1072.0], [30.8, 1073.0], [30.9, 1073.0], [31.0, 1074.0], [31.1, 1075.0], [31.2, 1076.0], [31.3, 1076.0], [31.4, 1076.0], [31.5, 1078.0], [31.6, 1078.0], [31.7, 1079.0], [31.8, 1080.0], [31.9, 1081.0], [32.0, 1081.0], [32.1, 1082.0], [32.2, 1082.0], [32.3, 1083.0], [32.4, 1084.0], [32.5, 1085.0], [32.6, 1086.0], [32.7, 1086.0], [32.8, 1087.0], [32.9, 1088.0], [33.0, 1088.0], [33.1, 1089.0], [33.2, 1089.0], [33.3, 1090.0], [33.4, 1090.0], [33.5, 1091.0], [33.6, 1092.0], [33.7, 1093.0], [33.8, 1094.0], [33.9, 1094.0], [34.0, 1095.0], [34.1, 1096.0], [34.2, 1096.0], [34.3, 1097.0], [34.4, 1098.0], [34.5, 1099.0], [34.6, 1100.0], [34.7, 1101.0], [34.8, 1102.0], [34.9, 1102.0], [35.0, 1103.0], [35.1, 1104.0], [35.2, 1105.0], [35.3, 1106.0], [35.4, 1106.0], [35.5, 1107.0], [35.6, 1108.0], [35.7, 1108.0], [35.8, 1109.0], [35.9, 1110.0], [36.0, 1111.0], [36.1, 1111.0], [36.2, 1111.0], [36.3, 1112.0], [36.4, 1112.0], [36.5, 1113.0], [36.6, 1115.0], [36.7, 1116.0], [36.8, 1116.0], [36.9, 1117.0], [37.0, 1118.0], [37.1, 1118.0], [37.2, 1119.0], [37.3, 1120.0], [37.4, 1120.0], [37.5, 1121.0], [37.6, 1122.0], [37.7, 1123.0], [37.8, 1125.0], [37.9, 1125.0], [38.0, 1126.0], [38.1, 1127.0], [38.2, 1128.0], [38.3, 1128.0], [38.4, 1129.0], [38.5, 1130.0], [38.6, 1130.0], [38.7, 1131.0], [38.8, 1131.0], [38.9, 1132.0], [39.0, 1133.0], [39.1, 1134.0], [39.2, 1134.0], [39.3, 1135.0], [39.4, 1135.0], [39.5, 1136.0], [39.6, 1136.0], [39.7, 1137.0], [39.8, 1138.0], [39.9, 1138.0], [40.0, 1139.0], [40.1, 1140.0], [40.2, 1140.0], [40.3, 1141.0], [40.4, 1142.0], [40.5, 1142.0], [40.6, 1142.0], [40.7, 1143.0], [40.8, 1143.0], [40.9, 1144.0], [41.0, 1145.0], [41.1, 1145.0], [41.2, 1145.0], [41.3, 1146.0], [41.4, 1146.0], [41.5, 1147.0], [41.6, 1147.0], [41.7, 1148.0], [41.8, 1149.0], [41.9, 1149.0], [42.0, 1150.0], [42.1, 1150.0], [42.2, 1151.0], [42.3, 1152.0], [42.4, 1153.0], [42.5, 1153.0], [42.6, 1155.0], [42.7, 1155.0], [42.8, 1156.0], [42.9, 1157.0], [43.0, 1158.0], [43.1, 1159.0], [43.2, 1159.0], [43.3, 1160.0], [43.4, 1161.0], [43.5, 1161.0], [43.6, 1162.0], [43.7, 1163.0], [43.8, 1164.0], [43.9, 1164.0], [44.0, 1165.0], [44.1, 1165.0], [44.2, 1167.0], [44.3, 1167.0], [44.4, 1168.0], [44.5, 1169.0], [44.6, 1170.0], [44.7, 1170.0], [44.8, 1171.0], [44.9, 1172.0], [45.0, 1172.0], [45.1, 1173.0], [45.2, 1173.0], [45.3, 1174.0], [45.4, 1175.0], [45.5, 1176.0], [45.6, 1177.0], [45.7, 1178.0], [45.8, 1179.0], [45.9, 1180.0], [46.0, 1181.0], [46.1, 1181.0], [46.2, 1181.0], [46.3, 1182.0], [46.4, 1182.0], [46.5, 1183.0], [46.6, 1183.0], [46.7, 1184.0], [46.8, 1184.0], [46.9, 1185.0], [47.0, 1186.0], [47.1, 1187.0], [47.2, 1187.0], [47.3, 1187.0], [47.4, 1188.0], [47.5, 1189.0], [47.6, 1190.0], [47.7, 1191.0], [47.8, 1192.0], [47.9, 1192.0], [48.0, 1192.0], [48.1, 1193.0], [48.2, 1193.0], [48.3, 1194.0], [48.4, 1195.0], [48.5, 1196.0], [48.6, 1197.0], [48.7, 1197.0], [48.8, 1198.0], [48.9, 1198.0], [49.0, 1199.0], [49.1, 1200.0], [49.2, 1200.0], [49.3, 1201.0], [49.4, 1202.0], [49.5, 1202.0], [49.6, 1203.0], [49.7, 1204.0], [49.8, 1204.0], [49.9, 1205.0], [50.0, 1205.0], [50.1, 1206.0], [50.2, 1206.0], [50.3, 1207.0], [50.4, 1208.0], [50.5, 1208.0], [50.6, 1209.0], [50.7, 1209.0], [50.8, 1210.0], [50.9, 1210.0], [51.0, 1211.0], [51.1, 1211.0], [51.2, 1212.0], [51.3, 1213.0], [51.4, 1214.0], [51.5, 1215.0], [51.6, 1215.0], [51.7, 1215.0], [51.8, 1216.0], [51.9, 1217.0], [52.0, 1217.0], [52.1, 1217.0], [52.2, 1218.0], [52.3, 1219.0], [52.4, 1220.0], [52.5, 1220.0], [52.6, 1221.0], [52.7, 1221.0], [52.8, 1223.0], [52.9, 1223.0], [53.0, 1223.0], [53.1, 1224.0], [53.2, 1225.0], [53.3, 1225.0], [53.4, 1226.0], [53.5, 1226.0], [53.6, 1226.0], [53.7, 1227.0], [53.8, 1227.0], [53.9, 1228.0], [54.0, 1229.0], [54.1, 1230.0], [54.2, 1231.0], [54.3, 1231.0], [54.4, 1232.0], [54.5, 1232.0], [54.6, 1233.0], [54.7, 1233.0], [54.8, 1234.0], [54.9, 1235.0], [55.0, 1235.0], [55.1, 1236.0], [55.2, 1237.0], [55.3, 1237.0], [55.4, 1238.0], [55.5, 1238.0], [55.6, 1239.0], [55.7, 1239.0], [55.8, 1240.0], [55.9, 1241.0], [56.0, 1241.0], [56.1, 1242.0], [56.2, 1243.0], [56.3, 1244.0], [56.4, 1244.0], [56.5, 1245.0], [56.6, 1245.0], [56.7, 1247.0], [56.8, 1247.0], [56.9, 1249.0], [57.0, 1249.0], [57.1, 1250.0], [57.2, 1250.0], [57.3, 1251.0], [57.4, 1251.0], [57.5, 1252.0], [57.6, 1253.0], [57.7, 1254.0], [57.8, 1254.0], [57.9, 1255.0], [58.0, 1256.0], [58.1, 1257.0], [58.2, 1258.0], [58.3, 1258.0], [58.4, 1259.0], [58.5, 1259.0], [58.6, 1260.0], [58.7, 1261.0], [58.8, 1261.0], [58.9, 1262.0], [59.0, 1262.0], [59.1, 1263.0], [59.2, 1263.0], [59.3, 1264.0], [59.4, 1264.0], [59.5, 1265.0], [59.6, 1265.0], [59.7, 1266.0], [59.8, 1267.0], [59.9, 1267.0], [60.0, 1268.0], [60.1, 1269.0], [60.2, 1269.0], [60.3, 1270.0], [60.4, 1271.0], [60.5, 1271.0], [60.6, 1272.0], [60.7, 1273.0], [60.8, 1273.0], [60.9, 1274.0], [61.0, 1274.0], [61.1, 1275.0], [61.2, 1275.0], [61.3, 1276.0], [61.4, 1277.0], [61.5, 1277.0], [61.6, 1278.0], [61.7, 1279.0], [61.8, 1280.0], [61.9, 1280.0], [62.0, 1280.0], [62.1, 1281.0], [62.2, 1282.0], [62.3, 1283.0], [62.4, 1283.0], [62.5, 1284.0], [62.6, 1284.0], [62.7, 1285.0], [62.8, 1286.0], [62.9, 1287.0], [63.0, 1288.0], [63.1, 1289.0], [63.2, 1290.0], [63.3, 1290.0], [63.4, 1291.0], [63.5, 1291.0], [63.6, 1293.0], [63.7, 1294.0], [63.8, 1295.0], [63.9, 1295.0], [64.0, 1296.0], [64.1, 1297.0], [64.2, 1298.0], [64.3, 1299.0], [64.4, 1300.0], [64.5, 1301.0], [64.6, 1302.0], [64.7, 1303.0], [64.8, 1303.0], [64.9, 1304.0], [65.0, 1305.0], [65.1, 1307.0], [65.2, 1308.0], [65.3, 1309.0], [65.4, 1310.0], [65.5, 1311.0], [65.6, 1312.0], [65.7, 1313.0], [65.8, 1314.0], [65.9, 1315.0], [66.0, 1316.0], [66.1, 1316.0], [66.2, 1318.0], [66.3, 1319.0], [66.4, 1320.0], [66.5, 1321.0], [66.6, 1322.0], [66.7, 1322.0], [66.8, 1323.0], [66.9, 1324.0], [67.0, 1325.0], [67.1, 1327.0], [67.2, 1328.0], [67.3, 1329.0], [67.4, 1330.0], [67.5, 1331.0], [67.6, 1331.0], [67.7, 1333.0], [67.8, 1334.0], [67.9, 1334.0], [68.0, 1335.0], [68.1, 1336.0], [68.2, 1337.0], [68.3, 1338.0], [68.4, 1339.0], [68.5, 1340.0], [68.6, 1341.0], [68.7, 1342.0], [68.8, 1343.0], [68.9, 1344.0], [69.0, 1345.0], [69.1, 1346.0], [69.2, 1346.0], [69.3, 1348.0], [69.4, 1348.0], [69.5, 1348.0], [69.6, 1350.0], [69.7, 1350.0], [69.8, 1352.0], [69.9, 1354.0], [70.0, 1354.0], [70.1, 1355.0], [70.2, 1356.0], [70.3, 1357.0], [70.4, 1358.0], [70.5, 1359.0], [70.6, 1361.0], [70.7, 1362.0], [70.8, 1363.0], [70.9, 1365.0], [71.0, 1366.0], [71.1, 1367.0], [71.2, 1368.0], [71.3, 1369.0], [71.4, 1369.0], [71.5, 1370.0], [71.6, 1371.0], [71.7, 1372.0], [71.8, 1374.0], [71.9, 1375.0], [72.0, 1376.0], [72.1, 1376.0], [72.2, 1378.0], [72.3, 1379.0], [72.4, 1380.0], [72.5, 1381.0], [72.6, 1382.0], [72.7, 1383.0], [72.8, 1384.0], [72.9, 1384.0], [73.0, 1386.0], [73.1, 1386.0], [73.2, 1388.0], [73.3, 1389.0], [73.4, 1389.0], [73.5, 1390.0], [73.6, 1390.0], [73.7, 1391.0], [73.8, 1392.0], [73.9, 1394.0], [74.0, 1395.0], [74.1, 1397.0], [74.2, 1399.0], [74.3, 1400.0], [74.4, 1401.0], [74.5, 1402.0], [74.6, 1403.0], [74.7, 1404.0], [74.8, 1405.0], [74.9, 1406.0], [75.0, 1408.0], [75.1, 1409.0], [75.2, 1410.0], [75.3, 1412.0], [75.4, 1413.0], [75.5, 1414.0], [75.6, 1416.0], [75.7, 1417.0], [75.8, 1417.0], [75.9, 1418.0], [76.0, 1419.0], [76.1, 1420.0], [76.2, 1420.0], [76.3, 1422.0], [76.4, 1424.0], [76.5, 1426.0], [76.6, 1427.0], [76.7, 1429.0], [76.8, 1430.0], [76.9, 1432.0], [77.0, 1433.0], [77.1, 1433.0], [77.2, 1435.0], [77.3, 1436.0], [77.4, 1438.0], [77.5, 1439.0], [77.6, 1441.0], [77.7, 1443.0], [77.8, 1445.0], [77.9, 1447.0], [78.0, 1449.0], [78.1, 1451.0], [78.2, 1453.0], [78.3, 1456.0], [78.4, 1458.0], [78.5, 1460.0], [78.6, 1461.0], [78.7, 1462.0], [78.8, 1463.0], [78.9, 1464.0], [79.0, 1465.0], [79.1, 1466.0], [79.2, 1469.0], [79.3, 1470.0], [79.4, 1471.0], [79.5, 1473.0], [79.6, 1474.0], [79.7, 1476.0], [79.8, 1476.0], [79.9, 1477.0], [80.0, 1480.0], [80.1, 1480.0], [80.2, 1481.0], [80.3, 1482.0], [80.4, 1484.0], [80.5, 1485.0], [80.6, 1487.0], [80.7, 1487.0], [80.8, 1489.0], [80.9, 1490.0], [81.0, 1492.0], [81.1, 1494.0], [81.2, 1494.0], [81.3, 1495.0], [81.4, 1497.0], [81.5, 1498.0], [81.6, 1499.0], [81.7, 1502.0], [81.8, 1503.0], [81.9, 1505.0], [82.0, 1506.0], [82.1, 1507.0], [82.2, 1508.0], [82.3, 1510.0], [82.4, 1511.0], [82.5, 1513.0], [82.6, 1514.0], [82.7, 1516.0], [82.8, 1517.0], [82.9, 1519.0], [83.0, 1520.0], [83.1, 1522.0], [83.2, 1524.0], [83.3, 1525.0], [83.4, 1527.0], [83.5, 1529.0], [83.6, 1531.0], [83.7, 1533.0], [83.8, 1535.0], [83.9, 1537.0], [84.0, 1539.0], [84.1, 1540.0], [84.2, 1541.0], [84.3, 1543.0], [84.4, 1544.0], [84.5, 1546.0], [84.6, 1547.0], [84.7, 1549.0], [84.8, 1550.0], [84.9, 1552.0], [85.0, 1553.0], [85.1, 1556.0], [85.2, 1557.0], [85.3, 1559.0], [85.4, 1562.0], [85.5, 1564.0], [85.6, 1566.0], [85.7, 1567.0], [85.8, 1569.0], [85.9, 1570.0], [86.0, 1572.0], [86.1, 1573.0], [86.2, 1575.0], [86.3, 1579.0], [86.4, 1581.0], [86.5, 1581.0], [86.6, 1583.0], [86.7, 1585.0], [86.8, 1587.0], [86.9, 1591.0], [87.0, 1592.0], [87.1, 1594.0], [87.2, 1595.0], [87.3, 1597.0], [87.4, 1601.0], [87.5, 1604.0], [87.6, 1607.0], [87.7, 1610.0], [87.8, 1613.0], [87.9, 1618.0], [88.0, 1620.0], [88.1, 1622.0], [88.2, 1625.0], [88.3, 1627.0], [88.4, 1630.0], [88.5, 1631.0], [88.6, 1632.0], [88.7, 1634.0], [88.8, 1638.0], [88.9, 1642.0], [89.0, 1644.0], [89.1, 1650.0], [89.2, 1659.0], [89.3, 1665.0], [89.4, 1669.0], [89.5, 1671.0], [89.6, 1673.0], [89.7, 1677.0], [89.8, 1680.0], [89.9, 1687.0], [90.0, 1689.0], [90.1, 1691.0], [90.2, 1694.0], [90.3, 1701.0], [90.4, 1703.0], [90.5, 1705.0], [90.6, 1711.0], [90.7, 1716.0], [90.8, 1718.0], [90.9, 1721.0], [91.0, 1724.0], [91.1, 1726.0], [91.2, 1728.0], [91.3, 1730.0], [91.4, 1732.0], [91.5, 1736.0], [91.6, 1740.0], [91.7, 1744.0], [91.8, 1748.0], [91.9, 1751.0], [92.0, 1753.0], [92.1, 1755.0], [92.2, 1760.0], [92.3, 1763.0], [92.4, 1767.0], [92.5, 1769.0], [92.6, 1771.0], [92.7, 1777.0], [92.8, 1780.0], [92.9, 1786.0], [93.0, 1789.0], [93.1, 1792.0], [93.2, 1794.0], [93.3, 1797.0], [93.4, 1798.0], [93.5, 1803.0], [93.6, 1805.0], [93.7, 1810.0], [93.8, 1814.0], [93.9, 1818.0], [94.0, 1821.0], [94.1, 1824.0], [94.2, 1827.0], [94.3, 1833.0], [94.4, 1837.0], [94.5, 1840.0], [94.6, 1841.0], [94.7, 1844.0], [94.8, 1848.0], [94.9, 1854.0], [95.0, 1859.0], [95.1, 1870.0], [95.2, 1876.0], [95.3, 1881.0], [95.4, 1888.0], [95.5, 1896.0], [95.6, 1906.0], [95.7, 1907.0], [95.8, 1918.0], [95.9, 1927.0], [96.0, 1934.0], [96.1, 1942.0], [96.2, 1950.0], [96.3, 1960.0], [96.4, 1973.0], [96.5, 1979.0], [96.6, 1997.0], [96.7, 2010.0], [96.8, 2040.0], [96.9, 2053.0], [97.0, 2089.0], [97.1, 2130.0], [97.2, 2155.0], [97.3, 2171.0], [97.4, 2187.0], [97.5, 2195.0], [97.6, 2204.0], [97.7, 2258.0], [97.8, 2265.0], [97.9, 2282.0], [98.0, 2312.0], [98.1, 2353.0], [98.2, 2387.0], [98.3, 2403.0], [98.4, 2420.0], [98.5, 2432.0], [98.6, 2437.0], [98.7, 2455.0], [98.8, 2480.0], [98.9, 2570.0], [99.0, 2629.0], [99.1, 2660.0], [99.2, 2720.0], [99.3, 2768.0], [99.4, 2812.0], [99.5, 2849.0], [99.6, 2863.0], [99.7, 2877.0], [99.8, 2987.0], [99.9, 3167.0]], "isOverall": false, "label": "创建交易", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 763.0, "series": [{"data": [[600.0, 4.0], [700.0, 8.0], [800.0, 36.0], [900.0, 79.0], [1000.0, 110.0], [1100.0, 138.0], [1200.0, 145.0], [1300.0, 132.0], [1400.0, 88.0], [1500.0, 68.0], [100.0, 3.0], [1600.0, 51.0], [1700.0, 34.0], [1800.0, 21.0], [1900.0, 16.0], [2000.0, 8.0], [2100.0, 3.0], [2300.0, 5.0], [2200.0, 5.0], [2400.0, 7.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [200.0, 2.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 1.0], [300.0, 11.0], [400.0, 6.0], [500.0, 1.0]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[2000.0, 1.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[300.0, 1.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[0.0, 2.0], [600.0, 6.0], [700.0, 15.0], [800.0, 62.0], [900.0, 124.0], [1000.0, 161.0], [1100.0, 150.0], [1200.0, 135.0], [1300.0, 68.0], [1400.0, 82.0], [1500.0, 52.0], [100.0, 9.0], [1600.0, 34.0], [1700.0, 22.0], [1800.0, 16.0], [1900.0, 11.0], [2000.0, 4.0], [2100.0, 4.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 3.0], [2800.0, 5.0], [2700.0, 1.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 2.0], [200.0, 11.0], [3200.0, 1.0], [300.0, 3.0], [400.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[0.0, 16.0], [600.0, 14.0], [700.0, 40.0], [800.0, 259.0], [900.0, 612.0], [1000.0, 660.0], [1100.0, 728.0], [1200.0, 763.0], [1300.0, 496.0], [1400.0, 366.0], [1500.0, 289.0], [100.0, 49.0], [1600.0, 144.0], [1700.0, 159.0], [1800.0, 103.0], [1900.0, 56.0], [2000.0, 21.0], [2100.0, 24.0], [2200.0, 21.0], [2300.0, 17.0], [2400.0, 31.0], [2500.0, 3.0], [2600.0, 10.0], [2800.0, 19.0], [2700.0, 11.0], [2900.0, 4.0], [3000.0, 2.0], [3100.0, 4.0], [200.0, 35.0], [3300.0, 1.0], [3400.0, 1.0], [300.0, 16.0], [400.0, 12.0], [500.0, 14.0]], "isOverall": false, "label": "创建交易", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 68.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5495.0, "series": [{"data": [[0.0, 118.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5495.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1321.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 68.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.74767322E12, "maxY": 50.0, "series": [{"data": [[1.74767322E12, 48.19452449567714], [1.74767334E12, 42.10240963855421], [1.74767328E12, 50.0]], "isOverall": false, "label": "交易创建测试", "isController": false}, {"data": [[1.74767322E12, 1.0]], "isOverall": false, "label": "账户创建测试", "isController": false}, {"data": [[1.74767322E12, 19.425029515938615], [1.74767334E12, 17.023437500000004], [1.74767328E12, 20.0]], "isOverall": false, "label": "分页查询测试", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74767334E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 114.85714285714285, "minX": 1.0, "maxY": 3234.0, "series": [{"data": [[32.0, 691.6666666666666], [35.0, 688.0], [43.0, 1291.0], [47.0, 1141.5], [46.0, 1423.25], [48.0, 1116.0], [51.0, 2238.666666666667], [50.0, 1370.3333333333333], [53.0, 3234.0], [52.0, 1290.0], [54.0, 3091.75], [55.0, 2105.375], [57.0, 1565.0], [56.0, 1292.0], [58.0, 1577.75], [59.0, 1488.5], [60.0, 1612.5], [61.0, 1682.111111111111], [63.0, 1998.0], [62.0, 1848.1666666666667], [65.0, 1719.7142857142858], [66.0, 1362.375], [67.0, 1346.25], [4.0, 376.0], [68.0, 1277.1666666666667], [69.0, 1087.111111111111], [70.0, 1317.7702078521927], [17.0, 901.5], [18.0, 178.0], [20.0, 329.0], [23.0, 385.3333333333333], [24.0, 366.2], [25.0, 544.6666666666666], [26.0, 338.0], [27.0, 731.0], [28.0, 457.4285714285714]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[67.2499999999999, 1320.3610000000015]], "isOverall": false, "label": "通用分页查询-Aggregated", "isController": false}, {"data": [[24.0, 2008.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[24.0, 2008.0]], "isOverall": false, "label": "创建源账户-Aggregated", "isController": false}, {"data": [[27.0, 334.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[27.0, 334.0]], "isOverall": false, "label": "创建目标账户-Aggregated", "isController": false}, {"data": [[33.0, 711.0], [35.0, 731.0], [34.0, 712.0], [39.0, 846.0], [38.0, 792.3333333333334], [40.0, 1029.0], [43.0, 1365.0], [49.0, 1229.75], [48.0, 1079.4285714285716], [50.0, 2832.0], [51.0, 2094.5], [52.0, 2756.2], [55.0, 1266.0], [54.0, 1180.0], [57.0, 1299.8], [56.0, 1271.8333333333333], [59.0, 1480.0], [58.0, 1705.4], [61.0, 1467.4285714285713], [60.0, 1341.0], [62.0, 1595.7142857142858], [63.0, 1863.7777777777778], [65.0, 1660.5000000000002], [66.0, 1264.0], [67.0, 1311.1666666666665], [68.0, 1186.5], [70.0, 1226.1274623406719], [69.0, 1006.7142857142858], [8.0, 538.0], [9.0, 497.0], [16.0, 540.0], [1.0, 118.0], [17.0, 604.0], [18.0, 392.3333333333333], [20.0, 342.85714285714283], [21.0, 606.0], [24.0, 151.0], [25.0, 165.75], [26.0, 234.5], [27.0, 335.5], [28.0, 305.5]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[67.23500000000006, 1221.1339999999996]], "isOverall": false, "label": "账户分页查询-Aggregated", "isController": false}, {"data": [[2.0, 132.0], [3.0, 153.0], [4.0, 235.0], [5.0, 223.0], [6.0, 208.0], [7.0, 231.0], [10.0, 464.0], [11.0, 390.0], [12.0, 482.0], [13.0, 478.0], [14.0, 521.0], [15.0, 485.8571428571429], [16.0, 162.0], [17.0, 202.125], [18.0, 114.85714285714285], [19.0, 574.0], [20.0, 275.6], [22.0, 315.8333333333333], [23.0, 500.25], [24.0, 387.20000000000005], [25.0, 471.33333333333337], [26.0, 375.59999999999997], [27.0, 332.5], [28.0, 570.0], [31.0, 600.0], [33.0, 748.0000000000001], [32.0, 755.0], [35.0, 775.3333333333334], [34.0, 633.0], [37.0, 799.25], [36.0, 856.25], [39.0, 926.0], [38.0, 884.0], [40.0, 1193.625], [43.0, 1300.8000000000002], [42.0, 1249.0], [45.0, 1375.7777777777778], [47.0, 1138.0], [46.0, 1233.5], [48.0, 1438.8888888888885], [49.0, 1435.0], [50.0, 1459.3333333333337], [51.0, 1775.1333333333334], [52.0, 2214.4], [53.0, 1537.5], [54.0, 2123.8571428571427], [55.0, 1296.25], [56.0, 1271.4047619047622], [57.0, 1318.4166666666665], [58.0, 1505.2777777777776], [59.0, 1472.9999999999998], [60.0, 1337.0], [61.0, 1571.8000000000002], [62.0, 1783.8684210526317], [63.0, 1863.0666666666668], [64.0, 1737.4], [65.0, 1569.8636363636363], [66.0, 1342.230769230769], [67.0, 1236.25], [68.0, 1121.6470588235297], [69.0, 1061.508771929825], [70.0, 1252.6847974510686]], "isOverall": false, "label": "创建交易", "isController": false}, {"data": [[67.61700000000003, 1247.4188000000038]], "isOverall": false, "label": "创建交易-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 70.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4125.15, "minX": 1.74767322E12, "maxY": 82930.78333333334, "series": [{"data": [[1.74767322E12, 74454.66666666667], [1.74767334E12, 23855.033333333333], [1.74767328E12, 82930.78333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74767322E12, 13098.983333333334], [1.74767334E12, 4125.15], [1.74767328E12, 14101.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74767334E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 334.0, "minX": 1.74767322E12, "maxY": 2008.0, "series": [{"data": [[1.74767322E12, 1263.7069767441867], [1.74767334E12, 1254.2439024390242], [1.74767328E12, 1393.053691275168]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[1.74767322E12, 2008.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[1.74767322E12, 334.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[1.74767322E12, 1164.880095923261], [1.74767334E12, 1157.000000000001], [1.74767328E12, 1292.2177777777788]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[1.74767322E12, 1183.3208453410202], [1.74767334E12, 1167.9472891566277], [1.74767328E12, 1330.0368234250243]], "isOverall": false, "label": "创建交易", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74767334E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 333.0, "minX": 1.74767322E12, "maxY": 2008.0, "series": [{"data": [[1.74767322E12, 1263.5325581395366], [1.74767334E12, 1254.2032520325201], [1.74767328E12, 1392.9574944071578]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[1.74767322E12, 2008.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[1.74767322E12, 333.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[1.74767322E12, 1164.7338129496395], [1.74767334E12, 1156.9022556390987], [1.74767328E12, 1292.133333333333]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[1.74767322E12, 1183.1810758885676], [1.74767334E12, 1167.870481927711], [1.74767328E12, 1329.9543034605144]], "isOverall": false, "label": "创建交易", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74767334E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74767322E12, "maxY": 85.0, "series": [{"data": [[1.74767322E12, 0.4465116279069763], [1.74767334E12, 0.04878048780487805], [1.74767328E12, 0.011185682326621928]], "isOverall": false, "label": "通用分页查询", "isController": false}, {"data": [[1.74767322E12, 85.0]], "isOverall": false, "label": "创建源账户", "isController": false}, {"data": [[1.74767322E12, 0.0]], "isOverall": false, "label": "创建目标账户", "isController": false}, {"data": [[1.74767322E12, 0.0], [1.74767334E12, 0.022556390977443615], [1.74767328E12, 0.015555555555555581]], "isOverall": false, "label": "账户分页查询", "isController": false}, {"data": [[1.74767322E12, 0.1863592699327574], [1.74767334E12, 0.05421686746987948], [1.74767328E12, 0.01730257320319437]], "isOverall": false, "label": "创建交易", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74767334E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.74767322E12, "maxY": 3736.0, "series": [{"data": [[1.74767322E12, 3736.0], [1.74767334E12, 2752.0], [1.74767328E12, 3169.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74767322E12, 1581.0], [1.74767334E12, 1659.6], [1.74767328E12, 1770.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74767322E12, 2771.2400000000075], [1.74767334E12, 2165.2699999999995], [1.74767328E12, 2743.040000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74767322E12, 1776.3999999999992], [1.74767334E12, 1906.299999999999], [1.74767328E12, 1983.3999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74767322E12, 30.0], [1.74767334E12, 85.0], [1.74767328E12, 85.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74767322E12, 1189.0], [1.74767334E12, 1145.5], [1.74767328E12, 1277.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74767334E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 207.5, "minX": 11.0, "maxY": 3038.5, "series": [{"data": [[11.0, 2812.0], [18.0, 365.0], [21.0, 1034.0], [27.0, 2190.0], [28.0, 1969.5], [29.0, 1492.0], [31.0, 2303.5], [32.0, 3038.5], [33.0, 1545.0], [35.0, 1546.5], [37.0, 1259.0], [36.0, 1534.0], [38.0, 1581.5], [39.0, 1516.0], [40.0, 1572.5], [41.0, 1558.0], [42.0, 1713.5], [43.0, 1499.0], [45.0, 1281.5], [44.0, 1507.0], [47.0, 1444.0], [49.0, 1380.0], [48.0, 1227.5], [51.0, 1420.0], [50.0, 1454.5], [52.0, 1294.0], [55.0, 1226.0], [54.0, 1245.0], [56.0, 1440.0], [57.0, 1277.5], [58.0, 1137.0], [59.0, 1182.0], [61.0, 1140.5], [60.0, 1226.0], [63.0, 1271.5], [62.0, 1140.0], [65.0, 1152.5], [66.0, 1155.0], [64.0, 1066.0], [67.0, 1045.5], [71.0, 1033.0], [69.0, 968.0], [68.0, 1018.0], [70.0, 1288.5], [75.0, 1185.5], [74.0, 942.0], [73.0, 1066.0], [72.0, 987.5], [78.0, 990.0], [76.0, 1125.5], [77.0, 953.0], [79.0, 875.0], [81.0, 1127.0], [82.0, 1054.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[71.0, 238.0], [18.0, 304.0], [28.0, 207.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 82.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 207.5, "minX": 11.0, "maxY": 3037.5, "series": [{"data": [[11.0, 2811.0], [18.0, 364.0], [21.0, 1034.0], [27.0, 2190.0], [28.0, 1969.5], [29.0, 1492.0], [31.0, 2303.5], [32.0, 3037.5], [33.0, 1545.0], [35.0, 1546.5], [37.0, 1259.0], [36.0, 1534.0], [38.0, 1581.5], [39.0, 1516.0], [40.0, 1572.5], [41.0, 1558.0], [42.0, 1713.5], [43.0, 1498.0], [45.0, 1281.5], [44.0, 1506.5], [47.0, 1444.0], [49.0, 1380.0], [48.0, 1227.5], [51.0, 1420.0], [50.0, 1454.5], [52.0, 1294.0], [55.0, 1226.0], [54.0, 1244.5], [56.0, 1440.0], [57.0, 1277.5], [58.0, 1137.0], [59.0, 1182.0], [61.0, 1140.5], [60.0, 1226.0], [63.0, 1271.0], [62.0, 1140.0], [65.0, 1151.5], [66.0, 1155.0], [64.0, 1066.0], [67.0, 1045.5], [71.0, 1033.0], [69.0, 968.0], [68.0, 1018.0], [70.0, 1288.5], [75.0, 1184.5], [74.0, 942.0], [73.0, 1066.0], [72.0, 987.5], [78.0, 990.0], [76.0, 1125.0], [77.0, 952.0], [79.0, 875.0], [81.0, 1127.0], [82.0, 1053.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[71.0, 238.0], [18.0, 303.0], [28.0, 207.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 82.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 14.166666666666666, "minX": 1.74767322E12, "maxY": 52.516666666666666, "series": [{"data": [[1.74767322E12, 50.016666666666666], [1.74767334E12, 14.166666666666666], [1.74767328E12, 52.516666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74767334E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1333333333333333, "minX": 1.74767322E12, "maxY": 52.516666666666666, "series": [{"data": [[1.74767322E12, 47.71666666666667], [1.74767334E12, 15.333333333333334], [1.74767328E12, 52.516666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.74767322E12, 1.1333333333333333]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74767334E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.74767322E12, "maxY": 37.56666666666667, "series": [{"data": [[1.74767322E12, 6.95], [1.74767334E12, 2.216666666666667], [1.74767328E12, 7.5]], "isOverall": false, "label": "账户分页查询-success", "isController": false}, {"data": [[1.74767322E12, 0.016666666666666666]], "isOverall": false, "label": "创建源账户-success", "isController": false}, {"data": [[1.74767322E12, 1.1333333333333333]], "isOverall": false, "label": "创建交易-failure", "isController": false}, {"data": [[1.74767322E12, 7.166666666666667], [1.74767334E12, 2.05], [1.74767328E12, 7.45]], "isOverall": false, "label": "通用分页查询-success", "isController": false}, {"data": [[1.74767322E12, 0.016666666666666666]], "isOverall": false, "label": "创建目标账户-success", "isController": false}, {"data": [[1.74767322E12, 33.56666666666667], [1.74767334E12, 11.066666666666666], [1.74767328E12, 37.56666666666667]], "isOverall": false, "label": "创建交易-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74767334E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1333333333333333, "minX": 1.74767322E12, "maxY": 52.516666666666666, "series": [{"data": [[1.74767322E12, 47.71666666666667], [1.74767334E12, 15.333333333333334], [1.74767328E12, 52.516666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74767322E12, 1.1333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74767334E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

